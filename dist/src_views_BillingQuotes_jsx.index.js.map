{"version":3,"file":"src_views_BillingQuotes_jsx.index.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingQuotes.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getUser } from '../controllers/accountsUsersSlice';\nimport { getClientQuotes } from '../controllers/accountsQuoteSlice';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nfunction BillingQuotes() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsUsers\n  );\n  const { quoteLoading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.accountsQuote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (quoteError) {\n    return <ErrorComponent error={quoteError} />;\n  }\n\n  const now = new Date().getTime();\n  let sortedQuotes = [];\n\n  if (Array.isArray(quotes)) {\n    sortedQuotes = quotes.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.expires_at - now);\n      const timeDiffB = Math.abs(b.expires_at - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n    <section className=\"quotes\">\n      <h2 className=\"title\">Quotes</h2>\n      {Array.isArray(sortedQuotes) && sortedQuotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedQuotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n      </section>\n    </>\n  );\n}\n\nexport default BillingQuotes;\n"],"names":["ErrorComponent","props","error","React","createElement","className","LoadingComponent","useEffect","useState","useDispatch","useSelector","getUser","getClientQuotes","BillingQuotes","dispatch","_useSelector","state","accountsUsers","user_email","stripe_customer_id","_useSelector2","accountsQuote","quoteLoading","quoteError","quotes","pdf","now","Date","getTime","sortedQuotes","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","expires_at","timeDiffB","Fragment","length","map","quote","id","status","Intl","NumberFormat","style","currency","format","amount_total","href","concat"],"sourceRoot":""}