{"version":3,"file":"src_views_BillingPayment_jsx.index.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingPayment.jsx","webpack://orb-accounts/./src/views/components/PaymentNavigation.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PaymentNavigationComponent from './components/PaymentNavigation.jsx';\n\nimport { getUser } from '../controllers/accountsUsersSlice.js';\nimport { getInvoiceByID } from '../controllers/accountsInvoiceSlice.js';\nimport { getReceipt } from '../controllers/accountsReceiptSlice.js';\nimport {\n  getStripeInvoice,\n  getPaymentIntent,\n} from '../controllers/accountsStripeSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction PaymentComponent() {\n  const { id } = useParams();\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('');\n\n  const { user_email } = useSelector((state) => state.accountsUser);\n  const { stripe_invoice_id, status, amount_remaining } = useSelector(\n    (state) => state.accountsInvoice\n  );\n  const { paymentLoading, paymentError } = useSelector(\n    (state) => state.accountsPayment\n  );\n  const { receipt_id } = useSelector((state) => state.accountsReceipt);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(\n            getInvoiceByID(id, response.payload.stripe_customer_id)\n          ).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            } else {\n              dispatch(\n                getStripeInvoice(response.payload.stripe_invoice_id)\n              ).then((response) => {\n                if (response.error !== undefined) {\n                  console.error(response.error.message);\n                  setMessageType('error');\n                  setMessage(response.error.message);\n                } else {\n                  dispatch(\n                    getPaymentIntent(response.payload.payment_intent_id)\n                  ).then((response) => {\n                    if (response.error !== undefined) {\n                      console.error(response.error.message);\n                      setMessageType('error');\n                      setMessage(response.error.message);\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n// Check to see if payment intent\n  useEffect(() => {\n    if (status === 'open') {\n      setMessage('Choose a payment method');\n    } else if (status === 'paid' && amount_remaining === 0) {\n      setMessage('This invoice has been paid in full.');\n    }\n  }, [status, amount_remaining]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getReceipt()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_invoice_id, dispatch]);\n\n  const handleClick = () => {\n    if (receipt_id) {\n      window.location.href = `/billing/receipt/${receipt_id}`;\n    }\n  };\n\n  if (paymentLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (paymentError) {\n    return <ErrorComponent error={paymentError} />;\n  }\n\n  return (\n    <>\n      <section className=\"payment\">\n        <h2 className=\"title\">PAYMENT</h2>\n\n        {status === 'open' ? <PaymentNavigationComponent /> : ''}\n\n        <StatusBar message={message} messageType={messageType} />\n\n        {receipt_id && status == 'paid' ? (\n          <button onClick={handleClick}>\n            <h3>RECEIPT</h3>\n          </button>\n        ) : (\n          ''\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default PaymentComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/wallet/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>WALLET</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","React","createElement","className","LoadingComponent","useEffect","useState","useParams","useDispatch","useSelector","PaymentNavigationComponent","getUser","getInvoiceByID","getReceipt","getStripeInvoice","getPaymentIntent","StatusBar","PaymentComponent","_useParams","id","_useState","_useState2","_slicedToArray","messageType","setMessageType","_useState3","_useState4","message","setMessage","_useSelector","state","accountsUser","user_email","_useSelector2","accountsInvoice","stripe_invoice_id","status","amount_remaining","_useSelector3","accountsPayment","paymentLoading","paymentError","_useSelector4","accountsReceipt","receipt_id","dispatch","then","response","undefined","console","payload","stripe_customer_id","payment_intent_id","handleClick","window","location","href","concat","Fragment","onClick","NavLink","useNavigate","to","StatusBarComponent"],"sourceRoot":""}