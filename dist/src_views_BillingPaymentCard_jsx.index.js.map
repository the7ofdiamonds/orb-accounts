{"version":3,"file":"src_views_BillingPaymentCard_jsx.index.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/utils/FormatCreditNumber.js","webpack://orb-accounts/./src/utils/FormatCurrency.js","webpack://orb-accounts/./src/utils/PaymentMethod.js","webpack://orb-accounts/./src/views/BillingPaymentCard.jsx","webpack://orb-accounts/./src/views/components/PaymentNavigation.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","export const FormatCreditNumber = (number) =>\n    number.split('').reduce((seed, next, index) => {\n        if (index !== 0 && !(index % 4)) seed += ' ';\n        return seed + next;\n    }, '');\n","export const FormatCurrency = (number, locales, currency) => {\n    const Number = number / 100;\n    const Locales = locales ? locales.toLowerCase() : 'us';\n    const Currency = currency || 'USD';\n\n   return new Intl.NumberFormat(Locales, {\n        style: 'currency',\n        currency: Currency,\n    }).format(Number);\n}","export function PaymentMethodGenerator(payment_method) {\n    let paymentMethod = '';\n  \n    if (payment_method) {\n      const paymentType = payment_method.type;\n      const paymentCard = payment_method.card;\n      const paymentFundingType = paymentCard.funding;\n      const paymentBrand = paymentCard.brand;\n      const country = paymentCard.country;\n      const last4 = paymentCard.last4;\n      const wallet = payment_method.wallet;\n  \n      if (paymentType === 'card') {\n        paymentMethod = `${\n          paymentFundingType !== 'unknown' ? paymentFundingType : ''\n        } ${paymentType} ${country} ${paymentBrand} ${last4}`;\n      } else if (paymentType === 'wallet' && wallet !== null) {\n        paymentMethod = wallet;\n      } else {\n        paymentMethod = paymentType;\n      }\n  \n      if (payment_method.card_present) {\n        const cardPresent = payment_method.card_present;\n        const cardPresentFunding = cardPresent.card_present;\n        const cardPresentBrand = cardPresent.brand;\n        const cardPresentCountry = cardPresent.country;\n        const cardPresentLast4 = cardPresent.last4;\n  \n        paymentMethod = `${\n          cardPresentFunding !== 'unknown' ? cardPresentFunding : ''\n        } ${paymentType} ${cardPresentCountry} ${cardPresentBrand} ${cardPresentLast4}`;\n      }\n    }\n    \n    return paymentMethod;\n  }\n  ","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  useStripe,\n  useElements,\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n} from '@stripe/react-stripe-js';\n\nimport PaymentNavigationComponent from './components/PaymentNavigation';\n\nimport { getUser } from '../controllers/accountsUsersSlice.js';\nimport { getInvoiceByID } from '../controllers/accountsInvoiceSlice';\nimport { saveReceipt } from '../controllers/accountsReceiptSlice';\nimport {\n  getStripeInvoice,\n  getPaymentIntent,\n  getPaymentMethod,\n  updatePaymentMethod,\n} from '../controllers/accountsStripeSlice.js';\n\nimport { PaymentMethodGenerator } from '../utils/PaymentMethod';\nimport { FormatCreditNumber } from '../utils/FormatCreditNumber';\nimport { FormatCurrency } from '../utils/FormatCurrency';\n\nimport LoadingComponent from '../loading/LoadingComponent';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar';\n\nconst CardPaymentComponent = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const elements = useElements();\n\n  // const CardNumber = elements.create(cardNumber);\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Please enter your card number, expiration date, and the code on the back.'\n  );\n\n  const { user_email, first_name, last_name, stripe_customer_id } = useSelector(\n    (state) => state.accountsUsers\n  );\n  const { stripe_invoice_id } = useSelector((state) => state.accountsInvoice);\n  const {\n    stripeLoading,\n    stripeError,\n    payment_intent_id,\n    status,\n    account_country,\n    currency,\n    amount_due,\n    amount_paid,\n    amount_remaining,\n    onboarding_links,\n    client_secret,\n    payment_method_id,\n    paymentMethod,\n  } = useSelector((state) => state.accountsStripe);\n  const { receipt_id } = useSelector((state) => state.accountsReceipt);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser(user_email)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getInvoiceByID(id)).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            }\n          });\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [stripe_invoice_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id));\n    }\n  }, [payment_intent_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_method_id) {\n      dispatch(getPaymentMethod(payment_method_id));\n    }\n  }, [payment_method_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_method_id) {\n      dispatch(updatePaymentMethod(PaymentMethodGenerator(payment_method_id)));\n    }\n  }, [payment_method_id, dispatch]);\n\n  useEffect(() => {\n    if (status === 'paid' && paymentMethod) {\n      dispatch(saveReceipt()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [status, paymentMethod, dispatch]);\n\n\n  const handlePay = () => {\n    if (client_secret) {\n    }\n  };\n\n  const handleReceipt = () => {\n    if (receipt_id) {\n      window.location.href = `/billing/receipt/${receipt_id}`;\n    }\n  };\n\n  const handleOnboarding = () => {};\n\n  return (\n    <>\n      <section className=\"payment\">\n        <PaymentNavigationComponent />\n\n        <form className=\"debit-credit-card card\">\n          <div className=\"card-number-box\">\n            <CardNumberElement />\n          </div>\n\n          <CardExpiryElement />\n          <CardCvcElement className=\"cvv-box\"></CardCvcElement>\n        </form>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <div className=\"amount\">\n          {amount_paid ? (\n            <>\n              <h3>\n                Amount Paid:\n                {FormatCurrency(amount_paid, account_country, currency)}\n              </h3>\n              <h3>\n                Balance:{' '}\n                {FormatCurrency(amount_remaining, account_country, currency)}\n              </h3>\n            </>\n          ) : amount_due ? (\n            <h3>\n              Amount: {FormatCurrency(amount_due, account_country, currency)}\n            </h3>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"action\">\n          {amount_due && client_secret ? (\n            <button type=\"submit\" onClick={handlePay}>\n              <h3>pay</h3>\n            </button>\n          ) : (\n            ''\n          )}\n\n          {receipt_id ? (\n            <button type=\"submit\" onClick={handleReceipt}>\n              <h3>receipt</h3>\n            </button>\n          ) : (\n            ''\n          )}\n\n          {receipt_id && onboarding_links ? (\n            <button type=\"submit\" onClick={handleOnboarding}>\n              <h3>onboarding</h3>\n            </button>\n          ) : (\n            ''\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default CardPaymentComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/wallet/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>WALLET</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","React","createElement","className","LoadingComponent","FormatCreditNumber","number","split","reduce","seed","next","index","FormatCurrency","locales","currency","Number","Locales","toLowerCase","Currency","Intl","NumberFormat","style","format","PaymentMethodGenerator","payment_method","paymentMethod","paymentType","type","paymentCard","card","paymentFundingType","funding","paymentBrand","brand","country","last4","wallet","concat","card_present","cardPresent","cardPresentFunding","cardPresentBrand","cardPresentCountry","cardPresentLast4","useEffect","useState","useParams","useNavigate","useSelector","useDispatch","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","PaymentNavigationComponent","getUser","getInvoiceByID","saveReceipt","getStripeInvoice","getPaymentIntent","getPaymentMethod","updatePaymentMethod","StatusBar","CardPaymentComponent","_useParams","id","dispatch","elements","_useState","_useState2","_slicedToArray","messageType","setMessageType","_useState3","_useState4","message","setMessage","_useSelector","state","accountsUsers","user_email","first_name","last_name","stripe_customer_id","_useSelector2","accountsInvoice","stripe_invoice_id","_useSelector3","accountsStripe","stripeLoading","stripeError","payment_intent_id","status","account_country","amount_due","amount_paid","amount_remaining","onboarding_links","client_secret","payment_method_id","_useSelector4","accountsReceipt","receipt_id","then","response","undefined","console","handlePay","handleReceipt","window","location","href","handleOnboarding","Fragment","onClick","NavLink","to","StatusBarComponent"],"sourceRoot":""}