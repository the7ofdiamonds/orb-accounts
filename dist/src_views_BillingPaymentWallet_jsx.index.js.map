{"version":3,"file":"src_views_BillingPaymentWallet_jsx.index.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingPaymentWallet.jsx","webpack://orb-accounts/./src/views/components/PaymentNavigation.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  PaymentRequestButtonElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nimport PaymentNavigationComponent from './components/PaymentNavigation';\nimport StatusBar from './components/StatusBar.jsx';\n\nconst WalletComponent = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Please enter your card number, expiration date, and the code on the back.'\n  );\n  const { setPaymentRequest, paymentRequest } = useState();\n\n  const { paymentLoading, paymentError, client_secret } = useSelector(\n    (state) => state.accountsPayment\n  );\n  const { receipt_id, payment_method } = useSelector((state) => state.accountsReceipt);\n\n  useEffect(() => {\n    if (!stripe || !elements) {\n      return;\n    }\n    const paymentRequest = stripe.paymentRequest({\n      country: 'US',\n      currency: 'usd',\n      requestPayerEmail: true,\n      requestPayerName: true,\n      total: {\n        label: 'Total',\n        amount: 1000, // Amount in cents\n      },\n    });\n\n    paymentRequest.canMakePayment().then((result) => {\n      if (result) {\n        setPaymentRequest(paymentRequest);\n      }\n    });\n  }, [stripe, elements, setPaymentRequest]);\n\n  if (paymentLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (paymentError) {\n    return <ErrorComponent error={servicesError} />;\n  }\n\n  return (\n    <>\n      <section className=\"payment\">\n        <PaymentNavigationComponent />\n        {paymentRequest && (\n          <PaymentRequestButtonElement options={{ paymentRequest }} />\n        )}\n\n        <StatusBar message={message} messageType={messageType} />\n      </section>\n    </>\n  );\n};\n\nexport default WalletComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/wallet/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>WALLET</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","React","createElement","className","LoadingComponent","useState","useEffect","useSelector","useDispatch","PaymentRequestButtonElement","useStripe","useElements","PaymentNavigationComponent","StatusBar","WalletComponent","stripe","elements","_useState","_useState2","_slicedToArray","messageType","setMessageType","_useState3","_useState4","message","setMessage","_useState5","setPaymentRequest","paymentRequest","_useSelector","state","accountsPayment","paymentLoading","paymentError","client_secret","_useSelector2","accountsReceipt","receipt_id","payment_method","country","currency","requestPayerEmail","requestPayerName","total","label","amount","canMakePayment","then","result","servicesError","Fragment","options","NavLink","useNavigate","useParams","_useParams","id","to","concat","StatusBarComponent"],"sourceRoot":""}