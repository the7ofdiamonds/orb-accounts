{"version":3,"file":"src_views_BillingQuote_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingQuote.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n  console.log(error);\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice.js';\nimport {\n  cancelQuote,\n  acceptQuote,\n  getStripeQuote,\n  getQuoteByID,\n} from '../controllers/accountsQuoteSlice.js';\nimport {\n  getInvoiceByQuoteID,\n  saveInvoice,\n} from '../controllers/accountsInvoiceSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction QuoteComponent() {\n  const { id } = useParams();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'To receive an invoice for the selected services, you must accept the quote above.'\n  );\n\n  const { user_email } = useSelector((state) => state.accountsClient);\n  const {\n    quoteLoading,\n    quoteError,\n    quote_id,\n    stripe_quote_id,\n    status,\n    total,\n    selections,\n    stripe_invoice_id,\n  } = useSelector((state) => state.accountsQuote);\n  const { invoice_id } = useSelector((state) => state.accountsInvoice);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getQuoteByID(id, response.payload.stripe_customer_id)).then(\n            (response) => {\n              if (response.error !== undefined) {\n                console.error(response.error.message);\n                setMessageType('error');\n                setMessage(response.error.message);\n              } else {\n                dispatch(getStripeQuote(response.payload.stripe_quote_id)).then(\n                  (response) => {\n                    if (response.error !== undefined) {\n                      console.error(response.error.message);\n                      setMessageType('error');\n                      setMessage(response.error.message);\n                    }\n                  }\n                );\n              }\n            }\n          );\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (status === 'canceled') {\n      setMessageType('error');\n      setMessage('This quote has been canceled.');\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (quote_id && status === 'accepted') {\n      dispatch(getInvoiceByQuoteID(quote_id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [quote_id, status, dispatch]);\n\n  const handleCancel = () => {\n    // pop up that gives the option to cancel or add to the selections\n    if (stripe_quote_id && status === 'open') {\n      dispatch(cancelQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  };\n\n  const handleAccept = async () => {\n    if (stripe_quote_id && status === 'open') {\n      dispatch(acceptQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(saveInvoice(response.payload.invoice)).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            } else {\n              window.location.href = `/billing/invoice/${response.payload}`;\n            }\n          });\n        }\n      });\n    }\n  };\n\n  const handleInvoice = () => {\n    if (invoice_id && status === 'accepted') {\n      window.location.href = `/billing/invoice/${invoice_id}`;\n    }\n  };\n\n  const handleSelections = () => {\n    if (status === 'canceled') {\n      window.location.href = `/client/selections`;\n    }\n  };\n\n  if (quoteLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (quoteError) {\n    return <ErrorComponent error={quoteError} />;\n  }\n\n  return (\n    <>\n      <section className=\"quote\">\n        <h2 className=\"title\">QUOTE</h2>\n\n        <div className=\"quote-card card\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote</h4>\n                </th>\n              </tr>\n              <tr>\n                <th>\n                  <h4 className=\"number-label\">NO.</h4>\n                </th>\n                <th colSpan={4}>\n                  <h4 className=\"description-label\">DESCRIPTION</h4>\n                </th>\n                <th>\n                  <h4 className=\"total-label\">TOTAL</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {selections &&\n                selections.length > 0 &&\n                selections.map((item) => (\n                  <tr id=\"quote_option\">\n                    <td className=\"feature-id\">{item.id}</td>\n                    <td className=\"feature-name\" id=\"feature_name\" colSpan={4}>\n                      {item.description}\n                    </td>\n                    <td\n                      className=\"feature-cost  table-number\"\n                      id=\"feature_cost\">\n                      <h4>\n                        {new Intl.NumberFormat('us', {\n                          style: 'currency',\n                          currency: 'USD',\n                        }).format(item.cost)}\n                      </h4>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <div className=\"actions\">\n          {status && status === 'open' ? (\n            <>\n              <button onClick={handleCancel}>\n                <h3>CANCEL</h3>\n              </button>\n\n              <button onClick={handleAccept}>\n                <h3>ACCEPT</h3>\n              </button>\n            </>\n          ) : status === 'accepted' ? (\n            <button onClick={handleInvoice}>\n              <h3>INVOICE</h3>\n            </button>\n          ) : status === 'canceled' ? (\n            <button onClick={handleSelections}>\n              <h3>SELECTIONS</h3>\n            </button>\n          ) : null}\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default QuoteComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","console","log","createElement","className","LoadingComponent","React","useEffect","useState","useParams","useSelector","useDispatch","getClient","cancelQuote","acceptQuote","getStripeQuote","getQuoteByID","getInvoiceByQuoteID","saveInvoice","StatusBar","QuoteComponent","id","messageType","setMessageType","message","setMessage","user_email","state","accountsClient","quoteLoading","quoteError","quote_id","stripe_quote_id","status","total","selections","stripe_invoice_id","accountsQuote","invoice_id","accountsInvoice","dispatch","then","response","undefined","payload","stripe_customer_id","handleCancel","handleAccept","invoice","window","location","href","handleInvoice","handleSelections","Fragment","colSpan","length","map","item","description","Intl","NumberFormat","style","currency","format","cost","onClick","StatusBarComponent"],"sourceRoot":""}