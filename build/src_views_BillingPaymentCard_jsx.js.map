{"version":3,"file":"src_views_BillingPaymentCard_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/utils/FormatCreditNumber.js","webpack://orb-accounts/./src/utils/FormatCurrency.js","webpack://orb-accounts/./src/utils/PaymentMethod.js","webpack://orb-accounts/./src/views/BillingPaymentCard.jsx","webpack://orb-accounts/./src/views/components/PaymentNavigation.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className='error'>\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","export const FormatCreditNumber = (number) =>\n    number.split('').reduce((seed, next, index) => {\n        if (index !== 0 && !(index % 4)) seed += ' ';\n        return seed + next;\n    }, '');\n","export const FormatCurrency = (number, locales, currency) => {\n    const Number = number / 100;\n    const Locales = locales ? locales.toLowerCase() : 'us';\n    const Currency = currency || 'USD';\n\n   return new Intl.NumberFormat(Locales, {\n        style: 'currency',\n        currency: Currency,\n    }).format(Number);\n}","export function PaymentMethodGenerator(payment_method) {\n    let paymentMethod = '';\n  \n    if (payment_method) {\n      const paymentType = payment_method.type;\n      const paymentCard = payment_method.card;\n      const paymentFundingType = paymentCard.funding;\n      const paymentBrand = paymentCard.brand;\n      const country = paymentCard.country;\n      const last4 = paymentCard.last4;\n      const wallet = payment_method.wallet;\n  \n      if (paymentType === 'card') {\n        paymentMethod = `${\n          paymentFundingType !== 'unknown' ? paymentFundingType : ''\n        } ${paymentType} ${country} ${paymentBrand} ${last4}`;\n      } else if (paymentType === 'wallet' && wallet !== null) {\n        paymentMethod = wallet;\n      } else {\n        paymentMethod = paymentType;\n      }\n  \n      if (payment_method.card_present) {\n        const cardPresent = payment_method.card_present;\n        const cardPresentFunding = cardPresent.card_present;\n        const cardPresentBrand = cardPresent.brand;\n        const cardPresentCountry = cardPresent.country;\n        const cardPresentLast4 = cardPresent.last4;\n  \n        paymentMethod = `${\n          cardPresentFunding !== 'unknown' ? cardPresentFunding : ''\n        } ${paymentType} ${cardPresentCountry} ${cardPresentBrand} ${cardPresentLast4}`;\n      }\n    }\n    \n    return paymentMethod;\n  }\n  ","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PaymentNavigationComponent from './components/PaymentNavigation';\n\nimport { getClient } from '../controllers/clientSlice';\nimport {\n  getInvoiceByID,\n  getStripeInvoice,\n  updateInvoiceStatus,\n} from '../controllers/invoiceSlice';\nimport { getPaymentIntent } from '../controllers/paymentSlice';\nimport {\n  postReceipt,\n  getPaymentMethod,\n  updatePaymentMethod,\n} from '../controllers/receiptSlice';\n\nimport { PaymentMethodGenerator } from '../utils/PaymentMethod';\nimport { FormatCreditNumber } from '../utils/FormatCreditNumber';\nimport { FormatCurrency } from '../utils/FormatCurrency';\n\nimport LoadingComponent from '../loading/LoadingComponent';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar';\n\nconst CardPaymentComponent = () => {\n  const { id } = useParams();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Please enter your card number, expiration date, and the code on the back.'\n  );\n\n  const { user_email, first_name, last_name, stripe_customer_id } = useSelector(\n    (state) => state.client\n  );\n  const {\n    stripe_invoice_id,\n    payment_intent_id,\n    status,\n    account_country,\n    currency,\n    amount_due,\n    amount_paid,\n    remaining_balance,\n  } = useSelector((state) => state.invoice);\n  const { paymentLoading, paymentError, client_secret } = useSelector(\n    (state) => state.payment\n  );\n  const { receipt_id, payment_method } = useSelector((state) => state.receipt);\n\n  const [cardNumber, setCardNumber] = useState('');\n  const [expMonth, setExpMonth] = useState('');\n  const [expYear, setExpYear] = useState('');\n  const [CVC, setCVC] = useState('');\n\n  const handleCardNumberChange = (e) => {\n    setCardNumber(e.target.value);\n  };\n\n  const handleExpMonthChange = (e) => {\n    setExpMonth(e.target.value);\n  };\n\n  const handleExpYearChange = (e) => {\n    setExpYear(e.target.value);\n  };\n\n  const handleCVCChange = (e) => {\n    setCVC(e.target.value);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient(user_email)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getInvoiceByID(id)).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            }\n          });\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id));\n    }\n  }, [payment_intent_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_method && stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [payment_method, dispatch]);\n\n  useEffect(() => {\n    if (payment_method) {\n      dispatch(getPaymentMethod(payment_method));\n    }\n  }, [payment_method, dispatch]);\n\n  useEffect(() => {\n    if (payment_method) {\n      dispatch(updatePaymentMethod(PaymentMethodGenerator(payment_method)));\n    }\n  }, [dispatch, payment_method]);\n\n  useEffect(() => {\n    if (status === 'paid') {\n      dispatch(postReceipt());\n    }\n  }, [dispatch, status]);\n\n  useEffect(() => {\n    const input = document.getElementById('credit-card-input');\n\n    if (input) {\n      input.addEventListener(\n        'input',\n        () =>\n          (input.value = FormatCreditNumber(input.value.replaceAll(' ', '')))\n      );\n    }\n  }, [cardNumber]);\n\n  const handleSubmit = () => {\n    console.log(cardNumber);\n  };\n\n  if (paymentLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (paymentError) {\n    return <ErrorComponent error={paymentError} />;\n  }\n\n  return (\n    <>\n      <section className=\"payment\">\n        <PaymentNavigationComponent />\n\n        <div className=\"debit-credit-card card\">\n          <div className=\"front\">\n            <div className=\"image\">\n              <img src=\"\" alt=\"\" />\n              <img src=\"\" alt=\"\" />\n            </div>\n            <div className=\"card-number-box\">\n              {cardNumber ? cardNumber : '0000 0000 0000 0000'}\n            </div>\n            <div className=\"flexbox\">\n              <div className=\"box\">\n                <div className=\"card-holder-name\">\n                  {first_name} {last_name}\n                </div>\n              </div>\n\n              <div className=\"box\">\n                <div className=\"expiration\">\n                  <h5>{expMonth ? expMonth : '00'}</h5>/\n                  <h5>{expYear ? expYear : '0000'}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"back\">\n            <div className=\"box\">\n              <span>CVC</span>\n              <div className=\"cvv-box\">{CVC ? CVC : '0000'}</div>\n              <img src=\"\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n\n        <form className=\"payment-card-form\">\n          <input\n            id=\"credit-card-input\"\n            type=\"text\"\n            size={16}\n            maxLength={19}\n            placeholder=\"0000 0000 0000 0000\"\n            onChange={handleCardNumberChange}\n            value={cardNumber}\n          />\n          <input\n            type=\"text\"\n            size={1}\n            maxLength={2}\n            placeholder=\"00\"\n            onChange={handleExpMonthChange}\n            value={expMonth}\n          />\n          <input\n            type=\"text\"\n            size={3}\n            maxLength={4}\n            placeholder=\"0000\"\n            onChange={handleExpYearChange}\n            value={expYear}\n          />\n          <input\n            type=\"text\"\n            size={3}\n            maxLength={4}\n            placeholder=\"CVC\"\n            onChange={handleCVCChange}\n            value={CVC}\n          />\n        </form>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        {amount_due ? (\n          <h3>\n            Amount: {FormatCurrency(amount_due, account_country, currency)}\n          </h3>\n        ) : (\n          ''\n        )}\n\n        <button type=\"submit\" onClick={handleSubmit}>\n          <h3>PAY</h3>\n        </button>\n      </section>\n    </>\n  );\n};\n\nexport default CardPaymentComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/wallet/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>WALLET</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","FormatCreditNumber","number","split","reduce","seed","next","index","FormatCurrency","locales","currency","Number","Locales","toLowerCase","Currency","Intl","NumberFormat","style","format","PaymentMethodGenerator","payment_method","paymentMethod","paymentType","type","paymentCard","card","paymentFundingType","funding","paymentBrand","brand","country","last4","wallet","card_present","cardPresent","cardPresentFunding","cardPresentBrand","cardPresentCountry","cardPresentLast4","React","useEffect","useState","useParams","useNavigate","useSelector","useDispatch","PaymentNavigationComponent","getClient","getInvoiceByID","getStripeInvoice","updateInvoiceStatus","getPaymentIntent","postReceipt","getPaymentMethod","updatePaymentMethod","StatusBar","CardPaymentComponent","id","messageType","setMessageType","message","setMessage","user_email","first_name","last_name","stripe_customer_id","state","client","stripe_invoice_id","payment_intent_id","status","account_country","amount_due","amount_paid","remaining_balance","invoice","paymentLoading","paymentError","client_secret","payment","receipt_id","receipt","cardNumber","setCardNumber","expMonth","setExpMonth","expYear","setExpYear","CVC","setCVC","handleCardNumberChange","e","target","value","handleExpMonthChange","handleExpYearChange","handleCVCChange","dispatch","then","response","undefined","console","input","document","getElementById","addEventListener","replaceAll","handleSubmit","log","Fragment","src","alt","size","maxLength","placeholder","onChange","onClick","NavLink","to","StatusBarComponent"],"sourceRoot":""}