{"version":3,"file":"src_views_BillingPaymentCard_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/utils/FormatCreditNumber.js","webpack://orb-accounts/./src/utils/FormatCurrency.js","webpack://orb-accounts/./src/utils/PaymentMethod.js","webpack://orb-accounts/./src/views/BillingPaymentCard.jsx","webpack://orb-accounts/./src/views/components/PaymentNavigation.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","export const FormatCreditNumber = (number) =>\n    number.split('').reduce((seed, next, index) => {\n        if (index !== 0 && !(index % 4)) seed += ' ';\n        return seed + next;\n    }, '');\n","export const FormatCurrency = (number, locales, currency) => {\n    const Number = number / 100;\n    const Locales = locales ? locales.toLowerCase() : 'us';\n    const Currency = currency || 'USD';\n\n   return new Intl.NumberFormat(Locales, {\n        style: 'currency',\n        currency: Currency,\n    }).format(Number);\n}","export function PaymentMethodGenerator(payment_method) {\n    let paymentMethod = '';\n  \n    if (payment_method) {\n      const paymentType = payment_method.type;\n      const paymentCard = payment_method.card;\n      const paymentFundingType = paymentCard.funding;\n      const paymentBrand = paymentCard.brand;\n      const country = paymentCard.country;\n      const last4 = paymentCard.last4;\n      const wallet = payment_method.wallet;\n  \n      if (paymentType === 'card') {\n        paymentMethod = `${\n          paymentFundingType !== 'unknown' ? paymentFundingType : ''\n        } ${paymentType} ${country} ${paymentBrand} ${last4}`;\n      } else if (paymentType === 'wallet' && wallet !== null) {\n        paymentMethod = wallet;\n      } else {\n        paymentMethod = paymentType;\n      }\n  \n      if (payment_method.card_present) {\n        const cardPresent = payment_method.card_present;\n        const cardPresentFunding = cardPresent.card_present;\n        const cardPresentBrand = cardPresent.brand;\n        const cardPresentCountry = cardPresent.country;\n        const cardPresentLast4 = cardPresent.last4;\n  \n        paymentMethod = `${\n          cardPresentFunding !== 'unknown' ? cardPresentFunding : ''\n        } ${paymentType} ${cardPresentCountry} ${cardPresentBrand} ${cardPresentLast4}`;\n      }\n    }\n    \n    return paymentMethod;\n  }\n  ","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  useStripe,\n  useElements,\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n} from '@stripe/react-stripe-js';\n\nimport PaymentNavigationComponent from './components/PaymentNavigation';\n\nimport { getUser } from '../controllers/accountsUsersSlice.js';\nimport { getInvoiceByID } from '../controllers/accountsInvoiceSlice';\nimport { saveReceipt } from '../controllers/accountsReceiptSlice';\nimport {\n  getStripeInvoice,\n  getPaymentIntent,\n  getPaymentMethod,\n  updatePaymentMethod,\n} from '../controllers/accountsStripeSlice.js';\n\nimport { PaymentMethodGenerator } from '../utils/PaymentMethod';\nimport { FormatCreditNumber } from '../utils/FormatCreditNumber';\nimport { FormatCurrency } from '../utils/FormatCurrency';\n\nimport LoadingComponent from '../loading/LoadingComponent';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar';\n\nconst CardPaymentComponent = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const elements = useElements();\n\n  // const CardNumber = elements.create(cardNumber);\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Please enter your card number, expiration date, and the code on the back.'\n  );\n\n  const { user_email, first_name, last_name, stripe_customer_id } = useSelector(\n    (state) => state.accountsUsers\n  );\n  const { stripe_invoice_id } = useSelector((state) => state.accountsInvoice);\n  const {\n    stripeLoading,\n    stripeError,\n    payment_intent_id,\n    status,\n    account_country,\n    currency,\n    amount_due,\n    amount_paid,\n    amount_remaining,\n    onboarding_links,\n    client_secret,\n    payment_method_id,\n    paymentMethod,\n  } = useSelector((state) => state.accountsStripe);\n  const { receipt_id } = useSelector((state) => state.accountsReceipt);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser(user_email)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getInvoiceByID(id)).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            }\n          });\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id));\n    }\n  }, [stripe_invoice_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id));\n    }\n  }, [payment_intent_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_method_id) {\n      dispatch(getPaymentMethod(payment_method_id));\n    }\n  }, [payment_method_id, dispatch]);\n\n  useEffect(() => {\n    if (payment_method_id) {\n      dispatch(updatePaymentMethod(PaymentMethodGenerator(payment_method_id)));\n    }\n  }, [payment_method_id, dispatch]);\n\n  useEffect(() => {\n    if (status === 'paid' && paymentMethod) {\n      dispatch(saveReceipt()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [status, paymentMethod, dispatch]);\n\n\n  const handlePay = () => {\n    if (client_secret) {\n    }\n  };\n\n  const handleReceipt = () => {\n    if (receipt_id) {\n      window.location.href = `/billing/receipt/${receipt_id}`;\n    }\n  };\n\n  const handleOnboarding = () => {};\n\n  return (\n    <>\n      <section className=\"payment\">\n        <PaymentNavigationComponent />\n\n        <form className=\"debit-credit-card card\">\n          <div className=\"card-number-box\">\n            <CardNumberElement />\n          </div>\n\n          <CardExpiryElement />\n          <CardCvcElement className=\"cvv-box\"></CardCvcElement>\n        </form>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <div className=\"amount\">\n          {amount_paid ? (\n            <>\n              <h3>\n                Amount Paid:\n                {FormatCurrency(amount_paid, account_country, currency)}\n              </h3>\n              <h3>\n                Balance:{' '}\n                {FormatCurrency(amount_remaining, account_country, currency)}\n              </h3>\n            </>\n          ) : amount_due ? (\n            <h3>\n              Amount: {FormatCurrency(amount_due, account_country, currency)}\n            </h3>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"action\">\n          {amount_due && client_secret ? (\n            <button type=\"submit\" onClick={handlePay}>\n              <h3>pay</h3>\n            </button>\n          ) : (\n            ''\n          )}\n\n          {receipt_id ? (\n            <button type=\"submit\" onClick={handleReceipt}>\n              <h3>receipt</h3>\n            </button>\n          ) : (\n            ''\n          )}\n\n          {receipt_id && onboarding_links ? (\n            <button type=\"submit\" onClick={handleOnboarding}>\n              <h3>onboarding</h3>\n            </button>\n          ) : (\n            ''\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default CardPaymentComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/wallet/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>WALLET</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","FormatCreditNumber","number","split","reduce","seed","next","index","FormatCurrency","locales","currency","Number","Locales","toLowerCase","Currency","Intl","NumberFormat","style","format","PaymentMethodGenerator","payment_method","paymentMethod","paymentType","type","paymentCard","card","paymentFundingType","funding","paymentBrand","brand","country","last4","wallet","card_present","cardPresent","cardPresentFunding","cardPresentBrand","cardPresentCountry","cardPresentLast4","React","useEffect","useState","useParams","useNavigate","useSelector","useDispatch","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","PaymentNavigationComponent","getUser","getInvoiceByID","saveReceipt","getStripeInvoice","getPaymentIntent","getPaymentMethod","updatePaymentMethod","StatusBar","CardPaymentComponent","id","dispatch","elements","messageType","setMessageType","message","setMessage","user_email","first_name","last_name","stripe_customer_id","state","accountsUsers","stripe_invoice_id","accountsInvoice","stripeLoading","stripeError","payment_intent_id","status","account_country","amount_due","amount_paid","amount_remaining","onboarding_links","client_secret","payment_method_id","accountsStripe","receipt_id","accountsReceipt","then","response","undefined","console","handlePay","handleReceipt","window","location","href","handleOnboarding","Fragment","onClick","NavLink","to","StatusBarComponent"],"sourceRoot":""}