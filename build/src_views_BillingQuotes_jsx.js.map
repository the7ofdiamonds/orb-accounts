{"version":3,"file":"src_views_BillingQuotes_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingQuotes.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice';\nimport { getClientQuotes } from '../controllers/accountsQuoteSlice';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nfunction BillingQuotes() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const { quoteLoading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.accountsQuote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (quoteError) {\n    return <ErrorComponent error={quoteError} />;\n  }\n\n  const now = new Date().getTime();\n  let sortedQuotes = [];\n\n  if (Array.isArray(quotes)) {\n    sortedQuotes = quotes.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.expires_at - now);\n      const timeDiffB = Math.abs(b.expires_at - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedQuotes) && sortedQuotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedQuotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingQuotes;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","React","useEffect","useState","useDispatch","useSelector","getClient","getClientQuotes","BillingQuotes","dispatch","user_email","stripe_customer_id","state","accountsClient","quoteLoading","quoteError","quotes","pdf","accountsQuote","now","Date","getTime","sortedQuotes","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","expires_at","timeDiffB","Fragment","length","map","quote","id","status","Intl","NumberFormat","style","currency","format","amount_total","href"],"sourceRoot":""}