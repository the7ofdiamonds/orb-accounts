{"version":3,"file":"src_views_ClientStart_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/ClientStart.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getUser,\n  addUser,\n  updateUser,\n  updateFirstName,\n  updateLastName,\n  updatePhone,\n  updateAddress,\n  updateAddress2,\n  updateCity,\n  updateState,\n  updateZipcode,\n  updateCountry,\n  updateShippingFirstName,\n  updateShippingLastName,\n  updateShippingPhone,\n  updateShippingAddress,\n  updateShippingAddress2,\n  updateShippingCity,\n  updateShippingState,\n  updateShippingZipcode,\n  updateShippingCountry,\n  updateCompanyName,\n  updateTaxExempt,\n  addTaxID,\n  deleteTaxID,\n  splitName,\n  splitShippingName,\n  updateTaxIDType,\n  updateTaxID,\n} from '../controllers/accountsUserSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\nimport { getCountries, getTaxIDInfo } from '../controllers/accountsEnums.js';\n\n// import countries from '../utils/Country.js';\n\nfunction ClientComponent() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'To receive a quote, please fill out the form above with the required information.'\n  );\n  const [isFomCompleted, setIsFormCompleted] = useState(false);\n  const [taxInfo, setTaxInfo] = useState('');\n\n  const {\n    clientLoading,\n    stripe_customer_id,\n    name,\n    first_name,\n    last_name,\n    user_email,\n    phone,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    country,\n    shipping_name,\n    shipping_first_name,\n    shipping_last_name,\n    shipping_phone,\n    shipping_address_line_1,\n    shipping_address_line_2,\n    shipping_city,\n    shipping_state,\n    shipping_zipcode,\n    shipping_country,\n    company_name,\n    tax_exempt,\n    tax_ids,\n    tax_id_type,\n    tax_id,\n  } = useSelector((state) => state.accountsUser);\n\n  const { countries, taxIDInfo } = useSelector((state) => state.accountsEnums);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (first_name && last_name && address_line_1 && city && state && zipcode) {\n      setIsFormCompleted(true);\n    }\n  }, [first_name, last_name, address_line_1, city, state, zipcode]);\n\n  useEffect(() => {\n    if (name) {\n      dispatch(splitName(name));\n    }\n  }, [name, dispatch]);\n\n  useEffect(() => {\n    if (shipping_name) {\n      dispatch(splitShippingName(shipping_name));\n    }\n  }, [shipping_name, dispatch]);\n\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getTaxIDInfo());\n  }, [dispatch]);\n\n  const handleFirstNameChange = (event) => {\n    dispatch(updateFirstName(event.target.value));\n  };\n\n  const handleLastNameChange = (event) => {\n    dispatch(updateLastName(event.target.value));\n  };\n\n  const handlePhoneChange = (event) => {\n    dispatch(updatePhone(event.target.value));\n  };\n\n  const handleAddressChange = (event) => {\n    dispatch(updateAddress(event.target.value));\n  };\n\n  const handleAddressChange2 = (event) => {\n    dispatch(updateAddress2(event.target.value));\n  };\n\n  const handleCityChange = (event) => {\n    dispatch(updateCity(event.target.value));\n  };\n\n  const handleStateChange = (event) => {\n    dispatch(updateState(event.target.value));\n  };\n\n  const handleZipcodeChange = (event) => {\n    dispatch(updateZipcode(event.target.value));\n  };\n\n  const handleCountryChange = (event) => {\n    dispatch(updateCountry(event.target.value));\n  };\n\n  const handleShippingFirstNameChange = (event) => {\n    dispatch(updateShippingFirstName(event.target.value));\n  };\n\n  const handleShippingLastNameChange = (event) => {\n    dispatch(updateShippingLastName(event.target.value));\n  };\n\n  const handleShippingPhoneChange = (event) => {\n    dispatch(updateShippingPhone(event.target.value));\n  };\n\n  const handleShippingAddressChange = (event) => {\n    dispatch(updateShippingAddress(event.target.value));\n  };\n\n  const handleShippingAddressChange2 = (event) => {\n    dispatch(updateShippingAddress2(event.target.value));\n  };\n\n  const handleShippingCityChange = (event) => {\n    dispatch(updateShippingCity(event.target.value));\n  };\n\n  const handleShippingStateChange = (event) => {\n    dispatch(updateShippingState(event.target.value));\n  };\n\n  const handleShippingZipcodeChange = (event) => {\n    dispatch(updateShippingZipcode(event.target.value));\n  };\n\n  const handleShippingCountryChange = (event) => {\n    dispatch(updateShippingCountry(event.target.value));\n  };\n\n  const handleCompanyNameChange = (event) => {\n    dispatch(updateCompanyName(event.target.value));\n  };\n\n  const handleTaxExemptChange = (event) => {\n    dispatch(updateTaxExempt(event.target.value));\n  };\n\n  const handleAddCompanyTaxID = (e) => {\n    e.preventDefault();\n    var modalElement = document.querySelector('.modal');\n\n    if (modalElement) {\n      modalElement.style.display = 'block';\n    } else {\n      console.error('Modal element not found');\n    }\n  };\n\n  const handleDeleteTaxID = (e, taxID) => {\n    e.preventDefault();\n    const confirmDeletion = window.confirm(\n      'Are you sure you want to delete this Tax ID?'\n    );\n\n    if (confirmDeletion) {\n      dispatch(deleteTaxID(taxID)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  const handleTaxIDType = (e, selectedCountry) => {\n    e.preventDefault();\n    setTaxInfo(selectedCountry);\n    dispatch(updateTaxIDType(selectedCountry.enum));\n  };\n\n  const handleTaxID = (e, tax_id) => {\n    e.preventDefault();\n    dispatch(updateTaxID(tax_id));\n  };\n\n  const handleAddTaxID = (e) => {\n    e.preventDefault();\n    const confirm = window.confirm('Are you sure you want to add this Tax ID?');\n\n    if (confirm && tax_id_type && tax_id) {\n      dispatch(addTaxID({ tax_id_type: tax_id_type, tax_id: tax_id })).then(\n        (response) => {\n          if (response.error !== undefined) {\n            console.error(response.error.message);\n            setMessageType('error');\n            setMessage(response.error.message);\n          } else {\n            window.location.reload();\n          }\n        }\n      );\n    }\n  };\n\n  const handleCancelTaxID = (e) => {\n    e.preventDefault();\n    var modalElement = document.querySelector('.modal');\n\n    if (modalElement) {\n      modalElement.style.display = 'none';\n    } else {\n      console.error('Modal element not found');\n    }\n  };\n\n  const handleSave = () => {\n    if (first_name === '') {\n      setMessage('Please provide first name.');\n      setMessageType('error');\n    } else if (last_name === '') {\n      setMessage('Please provide last name.');\n      setMessageType('error');\n    } else if (address_line_1 === '') {\n      setMessage('Please provide an address.');\n      setMessageType('error');\n    } else if (city === '') {\n      setMessage('Please provide the city.');\n      setMessageType('error');\n    } else if (state === '') {\n      setMessage('Please provide the state.');\n      setMessageType('error');\n    } else if (zipcode === '') {\n      setMessage('Please provide zipcode.');\n      setMessageType('error');\n    } else if (\n      (isFomCompleted && stripe_customer_id === '') ||\n      stripe_customer_id === undefined\n    ) {\n      dispatch(addUser()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  const handleUpdate = () => {\n    if (stripe_customer_id) {\n      dispatch(updateUser()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  const handleSelections = () => {\n    window.location.href = '/client/selections';\n  };\n\n  if (clientLoading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <section className=\"start\">\n        <h2 className=\"title\">user details</h2>\n        <form>\n          <table className=\"card\">\n            <thead>\n              <tr>\n                <th colSpan={3}>\n                  <h5 className=\"title\">contact</h5>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"first_name\"\n                    id=\"first_name\"\n                    placeholder=\"First Name\"\n                    onChange={handleFirstNameChange}\n                    value={first_name}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"last_name\"\n                    id=\"last_name\"\n                    placeholder=\"Last Name\"\n                    onChange={handleLastNameChange}\n                    value={last_name}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    placeholder=\"Phone\"\n                    onChange={handlePhoneChange}\n                    value={phone}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n\n          <div className=\"address\">\n            <table className=\"card\">\n              <thead>\n                <tr>\n                  <th colSpan={3}>\n                    <h5 className=\"title\">billing address</h5>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td colSpan={2}>\n                    <input\n                      className=\"input\"\n                      name=\"address_line_1\"\n                      id=\"bill_to_street\"\n                      placeholder=\"Street Address\"\n                      onChange={handleAddressChange}\n                      value={address_line_1}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"address_line_2\"\n                      id=\"bill_to_street2\"\n                      placeholder=\"Suite #\"\n                      onChange={handleAddressChange2}\n                      value={address_line_2}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"city\"\n                      id=\"bill_to_city\"\n                      placeholder=\"City\"\n                      onChange={handleCityChange}\n                      value={city}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"state\"\n                      id=\"bill_to_state\"\n                      placeholder=\"State\"\n                      onChange={handleStateChange}\n                      value={state}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"zipcode\"\n                      id=\"bill_to_zipcode\"\n                      placeholder=\"Zipcode\"\n                      onChange={handleZipcodeChange}\n                      value={zipcode}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"country\">Country</label>\n                  </td>\n                  <td>\n                    <select\n                      className=\"select\"\n                      name=\"country\"\n                      id=\"country\"\n                      onChange={(e) => handleCountryChange(e, e.target.value)}\n                      value={country}>\n                      {countries &&\n                        countries.length > 0 &&\n                        countries.map((country) => (\n                          <option key={country.code} value={country.code}>\n                            {country.country}\n                          </option>\n                        ))}\n                    </select>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <table className=\"card\">\n              <thead>\n                <tr>\n                  <th colSpan={3}>\n                    <h5 className=\"title\">shipping</h5>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_first_name\"\n                      id=\"shipping_first_name\"\n                      placeholder=\"First Name\"\n                      onChange={handleShippingFirstNameChange}\n                      value={shipping_first_name}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_last_name\"\n                      id=\"shipping_last_name\"\n                      placeholder=\"Last Name\"\n                      onChange={handleShippingLastNameChange}\n                      value={shipping_last_name}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_phone\"\n                      type=\"tel\"\n                      placeholder=\"Phone\"\n                      onChange={handleShippingPhoneChange}\n                      value={shipping_phone}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td colSpan={2}>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_address_line_1\"\n                      id=\"shipping_street\"\n                      placeholder=\"Shipping Street Address\"\n                      onChange={handleShippingAddressChange}\n                      value={shipping_address_line_1}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_address_line_2\"\n                      id=\"shipping_street2\"\n                      placeholder=\"Suite #\"\n                      onChange={handleShippingAddressChange2}\n                      value={shipping_address_line_2}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_city\"\n                      id=\"shipping_city\"\n                      placeholder=\"Shipping City\"\n                      onChange={handleShippingCityChange}\n                      value={shipping_city}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_state\"\n                      id=\"shipping_state\"\n                      placeholder=\"Shipping State\"\n                      onChange={handleShippingStateChange}\n                      value={shipping_state}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"shipping_zipcode\"\n                      id=\"shipping_zipcode\"\n                      placeholder=\"Shipping Zipcode\"\n                      onChange={handleShippingZipcodeChange}\n                      value={shipping_zipcode}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"shipping_country\">Shipping Country</label>\n                  </td>\n                  <td>\n                    <select\n                      className=\"select\"\n                      name=\"shipping_country\"\n                      id=\"shipping_country\"\n                      placeholder=\"Shipping Country\"\n                      onChange={(e) =>\n                        handleShippingCountryChange(e, e.target.value)\n                      }\n                      value={shipping_country}>\n                      {countries &&\n                        countries.length > 0 &&\n                        countries.map((country) => (\n                          <option key={country.code} value={country.code}>\n                            {country.country}\n                          </option>\n                        ))}\n                    </select>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <table className=\"card\">\n            <thead>\n              <tr>\n                <th colSpan={3}>\n                  <h5 className=\"title\">company</h5>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td colSpan={2}>\n                  <input\n                    className=\"input\"\n                    name=\"company_name\"\n                    id=\"company_name\"\n                    placeholder=\"Company Name\"\n                    onChange={handleCompanyNameChange}\n                    value={company_name}\n                  />\n                </td>\n                <td className=\"tax-exempt\">\n                  <label>Tax Exempt: </label>\n                  <select\n                    className=\"select\"\n                    name=\"tax_exempt\"\n                    id=\"tax_exempt\"\n                    onChange={handleTaxExemptChange}\n                    value={tax_exempt}>\n                    <option value=\"none\">\n                      <label>None</label>\n                    </option>\n                    <option value=\"exempt\">\n                      <label>Exempt</label>\n                    </option>\n                    <option value=\"reverse\">\n                      <label>Reverse</label>\n                    </option>\n                  </select>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"card\">\n            {tax_ids && tax_ids.length > 0 ? (\n              <>\n                <thead>\n                  <tr>\n                    <th colSpan={5}>\n                      <h5 className=\"title\">\n                        company tax id<span>s</span>\n                      </h5>\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>Type</th>\n                    <th>ID</th>\n                    <th>Verified</th>\n                    <th colSpan={2}></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tax_ids.map((tax_id) => (\n                    <tr key={tax_id.id}>\n                      <td>{tax_id.type.replace(/_/g, ' ').toUpperCase()}</td>\n                      <td>{tax_id.value}</td>\n                      <td className=\"status\">{tax_id.verification.status}</td>\n                      <td>\n                        <button\n                          className=\"add-button\"\n                          onClick={(e) => handleAddCompanyTaxID(e)}>\n                          <h4>add</h4>\n                        </button>\n                      </td>\n                      <td>\n                        <button\n                          className=\"delete-button\"\n                          onClick={(e) => handleDeleteTaxID(e, tax_id.id)}>\n                          <h4>delete</h4>\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </>\n            ) : (\n              <button\n                className=\"add-button\"\n                onClick={(e) => handleAddCompanyTaxID(e)}>\n                <h3>add company tax id</h3>\n              </button>\n            )}\n            <tfoot></tfoot>\n          </table>\n\n          <div className=\"modal\">\n            <table className=\"card\">\n              <thead>\n                <tr>\n                  <th colSpan={2}>\n                    <h5>add company tax id</h5>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Select Country:</label>\n                  </td>\n                  <td>\n                    <select\n                      className=\"select\"\n                      name=\"tax_id_country\"\n                      id=\"tax_id_country\"\n                      onChange={(e) =>\n                        handleTaxIDType(e, JSON.parse(e.target.value))\n                      }>\n                      {taxIDInfo &&\n                        taxIDInfo.length > 0 &&\n                        taxIDInfo.map((country) => (\n                          <option\n                            key={country.country}\n                            value={JSON.stringify(country)}>\n                            {country.country}\n                          </option>\n                        ))}\n                    </select>\n                  </td>\n                </tr>\n                {tax_id_type && taxInfo && Object.keys(taxInfo).length > 0 ? (\n                  <tr>\n                    <td>\n                      <label htmlFor=\"tax_id\">{taxInfo.description}</label>\n                    </td>\n                    <td>\n                      <input\n                        className=\"input\"\n                        name={taxInfo.description}\n                        id={`tax_id`}\n                        placeholder={`${taxInfo.example}`}\n                        onChange={(e) => handleTaxID(e, e.target.value)}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  ''\n                )}\n                <tr>\n                  <td>\n                    {tax_id_type && tax_id ? (\n                      <button\n                        className=\"add-button\"\n                        onClick={(e) => handleAddTaxID(e)}>\n                        <h4>add</h4>\n                      </button>\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                  <td>\n                    <button\n                      className=\"cancel-button\"\n                      onClick={(e) => handleCancelTaxID(e)}>\n                      <h4>cancel</h4>\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </form>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <div className=\"action\">\n          {stripe_customer_id === '' ? (\n            <button onClick={handleSave}>\n              <h3>save</h3>\n            </button>\n          ) : (\n            ''\n          )}\n\n          {stripe_customer_id ? (\n            <button onClick={handleUpdate}>\n              <h3>update</h3>\n            </button>\n          ) : (\n            ''\n          )}\n\n          {stripe_customer_id ? (\n            <button onClick={handleSelections}>\n              <h3>selections</h3>\n            </button>\n          ) : (\n            ''\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default ClientComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","useState","useEffect","useNavigate","useSelector","useDispatch","getUser","addUser","updateUser","updateFirstName","updateLastName","updatePhone","updateAddress","updateAddress2","updateCity","updateState","updateZipcode","updateCountry","updateShippingFirstName","updateShippingLastName","updateShippingPhone","updateShippingAddress","updateShippingAddress2","updateShippingCity","updateShippingState","updateShippingZipcode","updateShippingCountry","updateCompanyName","updateTaxExempt","addTaxID","deleteTaxID","splitName","splitShippingName","updateTaxIDType","updateTaxID","StatusBar","getCountries","getTaxIDInfo","ClientComponent","dispatch","navigate","messageType","setMessageType","message","setMessage","isFomCompleted","setIsFormCompleted","taxInfo","setTaxInfo","clientLoading","stripe_customer_id","name","first_name","last_name","user_email","phone","address_line_1","address_line_2","city","state","zipcode","country","shipping_name","shipping_first_name","shipping_last_name","shipping_phone","shipping_address_line_1","shipping_address_line_2","shipping_city","shipping_state","shipping_zipcode","shipping_country","company_name","tax_exempt","tax_ids","tax_id_type","tax_id","accountsUser","countries","taxIDInfo","accountsEnums","handleFirstNameChange","event","target","value","handleLastNameChange","handlePhoneChange","handleAddressChange","handleAddressChange2","handleCityChange","handleStateChange","handleZipcodeChange","handleCountryChange","handleShippingFirstNameChange","handleShippingLastNameChange","handleShippingPhoneChange","handleShippingAddressChange","handleShippingAddressChange2","handleShippingCityChange","handleShippingStateChange","handleShippingZipcodeChange","handleShippingCountryChange","handleCompanyNameChange","handleTaxExemptChange","handleAddCompanyTaxID","e","preventDefault","modalElement","document","querySelector","style","display","console","handleDeleteTaxID","taxID","confirmDeletion","window","confirm","then","response","undefined","location","reload","handleTaxIDType","selectedCountry","enum","handleTaxID","handleAddTaxID","handleCancelTaxID","handleSave","handleUpdate","handleSelections","href","Fragment","colSpan","id","placeholder","onChange","type","htmlFor","length","map","key","code","replace","toUpperCase","verification","status","onClick","JSON","parse","stringify","Object","keys","description","example","StatusBarComponent"],"sourceRoot":""}