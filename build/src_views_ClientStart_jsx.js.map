{"version":3,"file":"src_views_ClientStart_jsx.js","mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,cAAcA,CAACC,KAAK,EAAE;EAC7B,MAAM;IAAEC;EAAM,CAAC,GAAGD,KAAK;EAEvB,OACEE,oDAAA;IAAMC,SAAS,EAAC;EAAO,GACrBD,oDAAA;IAAKC,SAAS,EAAC;EAAuB,GACpCD,oDAAA,eAAOD,KAAY,CAChB,CACD,CAAC;AAEX;AAEA,iEAAeF,cAAc;;;;;;;;;;;;;;;;;ACZ7B,SAASK,gBAAgBA,CAAA,EAAG;EAC1B,OACEF,oDAAA;IAAKC,SAAS,EAAC;EAAS,GACtBD,oDAAA,aAAI,eAAiB,CAClB,CAAC;AAEV;AAEA,iEAAeE,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;ACRa;AACG;AACQ;AAaR;AAEgB;AACN;AACN;AAEnD,SAASiB,eAAeA,CAAA,EAAG;EACzB,MAAMC,QAAQ,GAAGb,wDAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGhB,6DAAW,CAAC,CAAC;EAE9B,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,+CAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,+CAAQ,CACpC,mFACF,CAAC;EAED,MAAM;IACJuB,UAAU;IACVC,aAAa;IACbC,kBAAkB;IAClBC,IAAI;IACJC,cAAc;IACdC,cAAc;IACdC,IAAI;IACJC,KAAK;IACLC,OAAO;IACPC;EACF,CAAC,GAAG7B,wDAAW,CAAE2B,KAAK,IAAKA,KAAK,CAACG,cAAc,CAAC;EAEhD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClClB,QAAQ,CAACR,+EAAU,CAAC0B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACnClB,QAAQ,CAACT,gFAAW,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,mBAAmB,GAAIJ,KAAK,IAAK;IACrClB,QAAQ,CAACP,kFAAa,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMG,oBAAoB,GAAIL,KAAK,IAAK;IACtClB,QAAQ,CAACN,mFAAc,CAACwB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMI,gBAAgB,GAAIN,KAAK,IAAK;IAClClB,QAAQ,CAACL,+EAAU,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMK,iBAAiB,GAAIP,KAAK,IAAK;IACnClB,QAAQ,CAACJ,gFAAW,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMM,mBAAmB,GAAIR,KAAK,IAAK;IACrClB,QAAQ,CAACH,kFAAa,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAM,CAACO,cAAc,EAAEC,kBAAkB,CAAC,GAAG7C,+CAAQ,CAAC,KAAK,CAAC;EAE5DC,gDAAS,CAAC,MAAM;IACd,IAAIsB,UAAU,EAAE;MACdN,QAAQ,CAACZ,8EAAS,CAACkB,UAAU,CAAC,CAAC,CAACuB,IAAI,CAAEC,QAAQ,IAAK;QACjD,IAAIA,QAAQ,CAACnD,KAAK,KAAKoD,SAAS,EAAE;UAChCC,OAAO,CAACrD,KAAK,CAACmD,QAAQ,CAACnD,KAAK,CAACyB,OAAO,CAAC;UACrCD,cAAc,CAAC,OAAO,CAAC;UACvBE,UAAU,CAACyB,QAAQ,CAACnD,KAAK,CAACyB,OAAO,CAAC;QACpC;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACE,UAAU,EAAEN,QAAQ,CAAC,CAAC;EAE1BhB,gDAAS,CAAC,MAAM;IACd,IAAI0B,cAAc,IAAIE,IAAI,IAAIC,KAAK,IAAIC,OAAO,EAAE;MAC9Cc,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,CAACnB,IAAI,EAAEC,cAAc,EAAEE,IAAI,EAAEC,KAAK,EAAEC,OAAO,CAAC,CAAC;EAEhD,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIxB,IAAI,KAAK,EAAE,EAAE;MACfJ,UAAU,CAAC,8BAA8B,CAAC;MAC1CF,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM,IAAIO,cAAc,KAAK,EAAE,EAAE;MAChCL,UAAU,CAAC,4BAA4B,CAAC;MACxCF,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM,IAAIS,IAAI,KAAK,EAAE,EAAE;MACtBP,UAAU,CAAC,0BAA0B,CAAC;MACtCF,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM,IAAIU,KAAK,KAAK,EAAE,EAAE;MACvBR,UAAU,CAAC,2BAA2B,CAAC;MACvCF,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM,IAAIW,OAAO,KAAK,EAAE,EAAE;MACzBT,UAAU,CAAC,yBAAyB,CAAC;MACrCF,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM,IACJwB,cAAc,IAAInB,kBAAkB,KAAK,EAAE,IAC5CA,kBAAkB,KAAKuB,SAAS,EAChC;MACA/B,QAAQ,CAACX,8EAAS,CAAC,CAAC,CAAC,CAACwC,IAAI,CAAEC,QAAQ,IAAK;QACvC,IAAIA,QAAQ,CAACnD,KAAK,KAAKoD,SAAS,EAAE;UAChCG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,oBAAoB;QAC7C,CAAC,MAAM;UACLJ,OAAO,CAACrD,KAAK,CAACmD,QAAQ,CAACnD,KAAK,CAACyB,OAAO,CAAC;UACrCD,cAAc,CAAC,OAAO,CAAC;UACvBE,UAAU,CAACyB,QAAQ,CAACnD,KAAK,CAACyB,OAAO,CAAC;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAII,kBAAkB,EAAE;MAC7BR,QAAQ,CAACV,iFAAY,CAAC,CAAC,CAAC,CAACuC,IAAI,CAAEC,QAAQ,IAAK;QAC1C,IAAIA,QAAQ,CAACnD,KAAK,KAAKoD,SAAS,EAAE;UAChCG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,oBAAoB;QAC7C,CAAC,MAAM;UACLJ,OAAO,CAACrD,KAAK,CAACmD,QAAQ,CAACnD,KAAK,CAACyB,OAAO,CAAC;UACrCD,cAAc,CAAC,OAAO,CAAC;UACvBE,UAAU,CAACyB,QAAQ,CAACnD,KAAK,CAACyB,OAAO,CAAC;QACpC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAIG,aAAa,EAAE;IACjB,OAAO3B,oDAAA,CAACE,qEAAgB,MAAE,CAAC;EAC7B;EAEA,OACEF,oDAAA,CAAAyD,2CAAA,QACEzD,oDAAA;IAASC,SAAS,EAAC;EAAO,GACxBD,oDAAA;IAAIC,SAAS,EAAC;EAAO,GAAC,gBAAkB,CAAC,EAEzCD,oDAAA;IAAKC,SAAS,EAAC,qBAAqB;IAACyD,EAAE,EAAC;EAAgB,GACtD1D,oDAAA,eACEA,oDAAA,gBACEA,oDAAA,cAAc,CAAC,EACfA,oDAAA,gBACEA,oDAAA,aACEA,oDAAA;IAAI2D,OAAO,EAAC;EAAG,GACb3D,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,MAAM;IACX6B,EAAE,EAAC,MAAM;IACTE,WAAW,EAAC,MAAM;IAClBC,QAAQ,EAAExB,gBAAiB;IAC3BG,KAAK,EAAEX;EAAK,CACb,CACC,CAAC,EACL7B,oDAAA,aACEA,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,OAAO;IACZiC,IAAI,EAAC,KAAK;IACVF,WAAW,EAAC,OAAO;IACnBC,QAAQ,EAAEpB,iBAAkB;IAC5BD,KAAK,EAAEL;EAAM,CACd,CACC,CACF,CAAC,EACLnC,oDAAA,aACEA,oDAAA;IAAI2D,OAAO,EAAC;EAAG,GACb3D,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,gBAAgB;IACrB6B,EAAE,EAAC,gBAAgB;IACnBE,WAAW,EAAC,gBAAgB;IAC5BC,QAAQ,EAAEnB,mBAAoB;IAC9BF,KAAK,EAAEV;EAAe,CACvB,CACC,CAAC,EACL9B,oDAAA,aACEA,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,gBAAgB;IACrB6B,EAAE,EAAC,iBAAiB;IACpBE,WAAW,EAAC,SAAS;IACrBC,QAAQ,EAAElB,oBAAqB;IAC/BH,KAAK,EAAET;EAAe,CACvB,CACC,CACF,CAAC,EACL/B,oDAAA,aACEA,oDAAA,aACEA,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,MAAM;IACX6B,EAAE,EAAC,cAAc;IACjBE,WAAW,EAAC,MAAM;IAClBC,QAAQ,EAAEjB,gBAAiB;IAC3BJ,KAAK,EAAER;EAAK,CACb,CACC,CAAC,EACLhC,oDAAA,aACEA,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,OAAO;IACZ6B,EAAE,EAAC,eAAe;IAClBE,WAAW,EAAC,OAAO;IACnBC,QAAQ,EAAEhB,iBAAkB;IAC5BL,KAAK,EAAEP;EAAM,CACd,CACC,CAAC,EACLjC,oDAAA,aACEA,oDAAA;IACEC,SAAS,EAAC,OAAO;IACjB4B,IAAI,EAAC,SAAS;IACd6B,EAAE,EAAC,iBAAiB;IACpBE,WAAW,EAAC,SAAS;IACrBC,QAAQ,EAAEf,mBAAoB;IAC9BN,KAAK,EAAEN;EAAQ,CAChB,CACC,CACF,CACC,CAAC,EACRlC,oDAAA,cAAc,CACT,CACH,CACH,CAAC,EAENA,oDAAA,CAACkB,iEAAS;IAACM,OAAO,EAAEA,OAAQ;IAACF,WAAW,EAAEA;EAAY,CAAE,CAAC,EAEzDtB,oDAAA;IAAQ0D,EAAE,EAAC,mBAAmB;IAACK,OAAO,EAAEV;EAAY,GAClDrD,oDAAA;IAAIC,SAAS,EAAC;EAAO,GAAC,YAAc,CAC9B,CACD,CACT,CAAC;AAEP;AAEA,iEAAekB,eAAe;;;;;;;;;;;;;;;;;AC/O9B,SAAS6C,kBAAkBA,CAAClE,KAAK,EAAE;EACjC,MAAM;IAAE0B,OAAO;IAAEF;EAAY,CAAC,GAAGxB,KAAK;EAEtC,OACEE,oDAAA,CAAAyD,2CAAA,QACGjC,OAAO,IACNxB,oDAAA;IAAKC,SAAS,EAAG,mBAAkBqB,WAAY;EAAE,GAC/CtB,oDAAA,eACEA,oDAAA,aAAKwB,OAAY,CACb,CACH,CAEP,CAAC;AAEP;AAEA,iEAAewC,kBAAkB","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/ClientStart.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getClient,\n  addClient,\n  updateClient,\n  updatePhone,\n  updateName,\n  updateAddress,\n  updateAddress2,\n  updateCity,\n  updateState,\n  updateZipcode,\n} from '../controllers/accountsClientSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction ClientComponent() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'To receive a quote, please fill out the form above with the required information.'\n  );\n\n  const {\n    user_email,\n    clientLoading,\n    stripe_customer_id,\n    name,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    phone,\n  } = useSelector((state) => state.accountsClient);\n\n  const handleNameChange = (event) => {\n    dispatch(updateName(event.target.value));\n  };\n\n  const handlePhoneChange = (event) => {\n    dispatch(updatePhone(event.target.value));\n  };\n\n  const handleAddressChange = (event) => {\n    dispatch(updateAddress(event.target.value));\n  };\n\n  const handleAddressChange2 = (event) => {\n    dispatch(updateAddress2(event.target.value));\n  };\n\n  const handleCityChange = (event) => {\n    dispatch(updateCity(event.target.value));\n  };\n\n  const handleStateChange = (event) => {\n    dispatch(updateState(event.target.value));\n  };\n\n  const handleZipcodeChange = (event) => {\n    dispatch(updateZipcode(event.target.value));\n  };\n\n  const [isFomCompleted, setIsFormCompleted] = useState(false);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient(user_email)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (address_line_1 && city && state && zipcode) {\n      setIsFormCompleted(true);\n    }\n  }, [name, address_line_1, city, state, zipcode]);\n\n  const handleClick = async () => {\n    if (name === '') {\n      setMessage('Please provide a first name.');\n      setMessageType('error');\n    } else if (address_line_1 === '') {\n      setMessage('Please provide an address.');\n      setMessageType('error');\n    } else if (city === '') {\n      setMessage('Please provide the city.');\n      setMessageType('error');\n    } else if (state === '') {\n      setMessage('Please provide the state.');\n      setMessageType('error');\n    } else if (zipcode === '') {\n      setMessage('Please provide zipcode.');\n      setMessageType('error');\n    } else if (\n      (isFomCompleted && stripe_customer_id === '') ||\n      stripe_customer_id === undefined\n    ) {\n      dispatch(addClient()).then((response) => {\n        if (response.error === undefined) {\n          window.location.href = '/client/selections';\n        } else {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (stripe_customer_id) {\n      dispatch(updateClient()).then((response) => {\n        if (response.error === undefined) {\n          window.location.href = '/client/selections';\n        } else {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  };\n\n  if (clientLoading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <section className=\"start\">\n        <h2 className=\"title\">CLIENT DETAILS</h2>\n\n        <div className=\"client-details card\" id=\"client-details\">\n          <form>\n            <table>\n              <thead></thead>\n              <tbody>\n                <tr>\n                  <td colSpan=\"2\">\n                    <input\n                      className=\"input\"\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Name\"\n                      onChange={handleNameChange}\n                      value={name}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"phone\"\n                      type=\"tel\"\n                      placeholder=\"Phone\"\n                      onChange={handlePhoneChange}\n                      value={phone}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td colSpan=\"2\">\n                    <input\n                      className=\"input\"\n                      name=\"address_line_1\"\n                      id=\"bill_to_street\"\n                      placeholder=\"Street Address\"\n                      onChange={handleAddressChange}\n                      value={address_line_1}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"address_line_2\"\n                      id=\"bill_to_street2\"\n                      placeholder=\"Suite #\"\n                      onChange={handleAddressChange2}\n                      value={address_line_2}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"city\"\n                      id=\"bill_to_city\"\n                      placeholder=\"City\"\n                      onChange={handleCityChange}\n                      value={city}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"state\"\n                      id=\"bill_to_state\"\n                      placeholder=\"State\"\n                      onChange={handleStateChange}\n                      value={state}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"zipcode\"\n                      id=\"bill_to_zipcode\"\n                      placeholder=\"Zipcode\"\n                      onChange={handleZipcodeChange}\n                      value={zipcode}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n              <tfoot></tfoot>\n            </table>\n          </form>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <button id=\"selections_button\" onClick={handleClick}>\n          <h3 className=\"title\">selections</h3>\n        </button>\n      </section>\n    </>\n  );\n}\n\nexport default ClientComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","useState","useEffect","useNavigate","useSelector","useDispatch","getClient","addClient","updateClient","updatePhone","updateName","updateAddress","updateAddress2","updateCity","updateState","updateZipcode","StatusBar","ClientComponent","dispatch","navigate","messageType","setMessageType","message","setMessage","user_email","clientLoading","stripe_customer_id","name","address_line_1","address_line_2","city","state","zipcode","phone","accountsClient","handleNameChange","event","target","value","handlePhoneChange","handleAddressChange","handleAddressChange2","handleCityChange","handleStateChange","handleZipcodeChange","isFomCompleted","setIsFormCompleted","then","response","undefined","console","handleClick","window","location","href","Fragment","id","colSpan","placeholder","onChange","type","onClick","StatusBarComponent"],"sourceRoot":""}