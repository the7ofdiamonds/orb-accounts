{"version":3,"file":"src_views_ClientStart_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/ClientStart.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n  console.log(error);\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient, addClient } from '../controllers/accountsClientSlice';\nimport {\n  updatePhone,\n  updateCompanyName,\n  updateTaxID,\n  updateFirstName,\n  updateLastName,\n  updateAddress,\n  updateAddress2,\n  updateCity,\n  updateState,\n  updateZipcode,\n  getStripeCustomer,\n  updateStripeCustomer,\n} from '../controllers/accountsCustomerSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction ClientComponent() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'To receive a quote, please fill out the form above with the required information.'\n  );\n\n  const { user_email, first_name, last_name, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const {\n    customerLoading,\n    company_name,\n    tax_id,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    phone,\n  } = useSelector((state) => state.accountsCustomer);\n\n  const handleCompanyNameChange = (event) => {\n    dispatch(updateCompanyName(event.target.value));\n  };\n\n  const handleTaxIDChange = (event) => {\n    dispatch(updateTaxID(event.target.value));\n  };\n\n  const handleFirstNameChange = (event) => {\n    dispatch(updateFirstName(event.target.value));\n  };\n\n  const handleLastNameChange = (event) => {\n    dispatch(updateLastName(event.target.value));\n  };\n\n  const handlePhoneChange = (event) => {\n    dispatch(updatePhone(event.target.value));\n  };\n\n  const handleAddressChange = (event) => {\n    dispatch(updateAddress(event.target.value));\n  };\n\n  const handleAddressChange2 = (event) => {\n    dispatch(updateAddress2(event.target.value));\n  };\n\n  const handleCityChange = (event) => {\n    dispatch(updateCity(event.target.value));\n  };\n\n  const handleStateChange = (event) => {\n    dispatch(updateState(event.target.value));\n  };\n\n  const handleZipcodeChange = (event) => {\n    dispatch(updateZipcode(event.target.value));\n  };\n\n  const [isFomCompleted, setIsFormCompleted] = useState(false);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient(user_email)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getStripeCustomer()).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            }\n          });\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (address_line_1 && city && state && zipcode) {\n      setIsFormCompleted(true);\n    }\n  }, [first_name, last_name, address_line_1, city, state, zipcode]);\n\n  const handleClick = async () => {\n    if (first_name === '') {\n      setMessage('Please provide a first name.');\n      setMessageType('error');\n    } else if (last_name === '') {\n      setMessage('Please provide last name.');\n      setMessageType('error');\n    } else if (address_line_1 === '') {\n      setMessage('Please provide an address.');\n      setMessageType('error');\n    } else if (city === '') {\n      setMessage('Please provide the city.');\n      setMessageType('error');\n    } else if (state === '') {\n      setMessage('Please provide the state.');\n      setMessageType('error');\n    } else if (zipcode === '') {\n      setMessage('Please provide zipcode.');\n      setMessageType('error');\n    } else if (\n      (isFomCompleted && stripe_customer_id === '') ||\n      stripe_customer_id === undefined\n    ) {\n      dispatch(addClient()).then((response) => {\n        if (response.error === undefined) {\n          window.location.href = '/client/selections';\n        } else {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (stripe_customer_id) {\n      dispatch(updateStripeCustomer()).then((response) => {\n        if (response.error === undefined) {\n          window.location.href = '/client/selections';\n        } else {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  };\n\n  if (customerLoading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <>\n      <section className=\"start\">\n        <h2 className=\"title\">CLIENT DETAILS</h2>\n\n        <div className=\"client-details card\" id=\"client-details\">\n          <form>\n            <table>\n              <thead></thead>\n              <tbody>\n                <tr>\n                  <td colSpan={2}>\n                    <input\n                      className=\"input\"\n                      name=\"company_name\"\n                      id=\"company_name\"\n                      placeholder=\"Company Name\"\n                      onChange={handleCompanyNameChange}\n                      value={company_name}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"tax_id\"\n                      id=\"tax_id\"\n                      placeholder=\"Tax ID\"\n                      onChange={handleTaxIDChange}\n                      value={tax_id}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"first_name\"\n                      id=\"first_name\"\n                      placeholder=\"First Name\"\n                      onChange={handleFirstNameChange}\n                      value={first_name}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"last_name\"\n                      id=\"last_name\"\n                      placeholder=\"Last Name\"\n                      onChange={handleLastNameChange}\n                      value={last_name}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"phone\"\n                      type=\"tel\"\n                      placeholder=\"Phone\"\n                      onChange={handlePhoneChange}\n                      value={phone}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td colSpan={2}>\n                    <input\n                      className=\"input\"\n                      name=\"address_line_1\"\n                      id=\"bill_to_street\"\n                      placeholder=\"Street Address\"\n                      onChange={handleAddressChange}\n                      value={address_line_1}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"address_line_2\"\n                      id=\"bill_to_street2\"\n                      placeholder=\"Suite #\"\n                      onChange={handleAddressChange2}\n                      value={address_line_2}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"city\"\n                      id=\"bill_to_city\"\n                      placeholder=\"City\"\n                      onChange={handleCityChange}\n                      value={city}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"state\"\n                      id=\"bill_to_state\"\n                      placeholder=\"State\"\n                      onChange={handleStateChange}\n                      value={state}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      name=\"zipcode\"\n                      id=\"bill_to_zipcode\"\n                      placeholder=\"Zipcode\"\n                      onChange={handleZipcodeChange}\n                      value={zipcode}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n              <tfoot></tfoot>\n            </table>\n          </form>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <button id=\"selections_button\" onClick={handleClick}>\n          <h3>selections</h3>\n        </button>\n      </section>\n    </>\n  );\n}\n\nexport default ClientComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","console","log","createElement","className","LoadingComponent","useState","useEffect","useNavigate","useSelector","useDispatch","getClient","addClient","updatePhone","updateCompanyName","updateTaxID","updateFirstName","updateLastName","updateAddress","updateAddress2","updateCity","updateState","updateZipcode","getStripeCustomer","updateStripeCustomer","StatusBar","ClientComponent","dispatch","navigate","messageType","setMessageType","message","setMessage","user_email","first_name","last_name","stripe_customer_id","state","accountsClient","customerLoading","company_name","tax_id","address_line_1","address_line_2","city","zipcode","phone","accountsCustomer","handleCompanyNameChange","event","target","value","handleTaxIDChange","handleFirstNameChange","handleLastNameChange","handlePhoneChange","handleAddressChange","handleAddressChange2","handleCityChange","handleStateChange","handleZipcodeChange","isFomCompleted","setIsFormCompleted","then","response","undefined","handleClick","window","location","href","Fragment","id","colSpan","name","placeholder","onChange","type","onClick","StatusBarComponent"],"sourceRoot":""}