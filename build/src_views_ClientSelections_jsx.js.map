{"version":3,"file":"src_views_ClientSelections_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/ClientSelections.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchServices } from '../controllers/accountsServicesSlice.js';\nimport { getUser } from '../controllers/accountsUserSlice.js';\nimport {\n  addSelections,\n  calculateSelections,\n  addOnboardingLink,\n  createQuote,\n  updateQuote,\n  finalizeQuote,\n  getClientQuotes,\n  getQuote,\n} from '../controllers/accountsQuoteSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction SelectionsComponent() {\n  const dispatch = useDispatch();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Check the boxes next to the services you would like performed.'\n  );\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const { servicesLoading, servicesError, services } = useSelector(\n    (state) => state.accountsServices\n  );\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsUser\n  );\n  const {\n    quoteLoading,\n    quoteError,\n    stripe_quote_id,\n    quotes,\n    quote_id,\n    quote_status,\n    selections,\n    total,\n  } = useSelector((state) => state.accountsQuote);\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(quotes) && quotes.length > 0) {\n      const filteredQuotes = [];\n\n      quotes.forEach((quote) => {\n        const timestampNow = Math.floor(Date.now() / 1000);\n        const timestamp = parseInt(quote.expires_at);\n        const createdAt = new Date(quote.created_at).getTime();\n        const status = quote.status;\n\n        if (timestampNow < timestamp) {\n          if (\n            status === 'draft' ||\n            status === 'open' ||\n            status === 'accepted'\n          ) {\n            filteredQuotes.push(createdAt);\n          }\n        }\n      });\n\n      if (filteredQuotes.length > 0) {\n        const earliestDate = Math.min(...filteredQuotes);\n\n        quotes.forEach((quote) => {\n          if (new Date(quote.created_at).getTime() === earliestDate) {\n            dispatch(getQuote(quote.stripe_quote_id));\n          }\n        });\n      }\n    }\n  }, [quotes, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(fetchServices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    dispatch(addSelections(checkedItems));\n  }, [dispatch, checkedItems]);\n\n  useEffect(() => {\n    dispatch(calculateSelections(services.price));\n  }, [dispatch, services.price, checkedItems]);\n\n  useEffect(() => {\n    dispatch(addOnboardingLink());\n  }, [dispatch, checkedItems]);\n\n  useEffect(() => {\n    if (stripe_quote_id) {\n      dispatch(getQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_quote_id, dispatch]);\n\n  const handleCheckboxChange = (\n    event,\n    id,\n    price_id,\n    description,\n    price,\n    onboarding_link\n  ) => {\n    const isChecked = event.target.checked;\n\n    setCheckedItems((prevItems) => {\n      if (isChecked) {\n        const newItem = { id, price_id, description, price, onboarding_link };\n        return [...prevItems, newItem];\n      } else {\n        return prevItems.filter((item) => item.id !== id);\n      }\n    });\n  };\n\n  const handleClick = () => {\n    if (quote_id && (quote_status === 'open' || quote_status === 'accepted')) {\n      window.location.href = `/billing/quote/${quote_id}`;\n    }\n\n    if (quote_status === 'draft') {\n      dispatch(updateQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(finalizeQuote()).then((response) => {\n            if (response.error !== undefined) {\n              console.error(response.error.message);\n              setMessageType('error');\n              setMessage(response.error.message);\n            } else {\n              window.location.href = `/billing/quote/${response.payload.quote_id}`;\n            }\n          });\n        }\n      });\n    }\n\n    if (stripe_quote_id === '' || quote_status === 'canceled') {\n      dispatch(createQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          window.location.href = `/billing/quote/${response.payload}`;\n        }\n      });\n    }\n  };\n\n  if (servicesLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (servicesError) {\n    return <ErrorComponent error={servicesError} />;\n  }\n\n  return (\n    <>\n      <section className=\"selections\">\n        <h2 className=\"title\">selections</h2>\n\n        <div className=\"quote-card card\">\n          <table>\n            <thead>\n              <tr>\n                <th colSpan={2}>\n                  <h4 className=\"title\">service</h4>\n                </th>\n                <th>\n                  <h4 className=\"title\">cost</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {services && services.length ? (\n                <React.Fragment>\n                  {services.map((service) => {\n                    const {\n                      id,\n                      price_id,\n                      description,\n                      price,\n                      onboarding_link,\n                    } = service;\n\n                    return (\n                      <tr key={id} id=\"quote_option\">\n                        <td>\n                          <input\n                            className=\"input selection feature-selection\"\n                            type=\"checkbox\"\n                            name=\"quote[checkbox][]\"\n                            checked={checkedItems.some(\n                              (item) => item.id === id\n                            )}\n                            onChange={(event) =>\n                              handleCheckboxChange(\n                                event,\n                                id,\n                                price_id,\n                                description,\n                                price,\n                                onboarding_link\n                              )\n                            }\n                          />\n                        </td>\n                        <td className=\"feature-description\">\n                          <h5>{description}</h5>\n                        </td>\n                        <td\n                          className=\"feature-cost table-number\"\n                          id=\"feature_cost\">\n                          <h4>\n                            {new Intl.NumberFormat('us', {\n                              style: 'currency',\n                              currency: 'USD',\n                            }).format(price)}\n                          </h4>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </React.Fragment>\n              ) : (\n                <tr>\n                  <td colSpan={3}>\n                    <h3>No services to show yet</h3>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n            <tfoot>\n              <tr>\n                <th colSpan={2}>\n                  <h4 className=\"title\">TOTAL</h4>\n                </th>\n                <th>\n                  <h4 className=\"subtotal\">\n                    {new Intl.NumberFormat('us', {\n                      style: 'currency',\n                      currency: 'USD',\n                    }).format(total)}\n                  </h4>\n                </th>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        {Array.isArray(selections) && selections.length > 0 ? (\n          <button onClick={handleClick}>\n            <h3>QUOTE</h3>\n          </button>\n        ) : (\n          ''\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default SelectionsComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","React","useEffect","useState","useSelector","useDispatch","fetchServices","getUser","addSelections","calculateSelections","addOnboardingLink","createQuote","updateQuote","finalizeQuote","getClientQuotes","getQuote","StatusBar","SelectionsComponent","dispatch","messageType","setMessageType","message","setMessage","checkedItems","setCheckedItems","servicesLoading","servicesError","services","state","accountsServices","user_email","stripe_customer_id","accountsUser","quoteLoading","quoteError","stripe_quote_id","quotes","quote_id","quote_status","selections","total","accountsQuote","then","response","undefined","console","Array","isArray","length","filteredQuotes","forEach","quote","timestampNow","Math","floor","Date","now","timestamp","parseInt","expires_at","createdAt","created_at","getTime","status","push","earliestDate","min","price","handleCheckboxChange","event","id","price_id","description","onboarding_link","isChecked","target","checked","prevItems","newItem","filter","item","handleClick","window","location","href","payload","Fragment","colSpan","map","service","key","type","name","some","onChange","Intl","NumberFormat","style","currency","format","onClick","StatusBarComponent"],"sourceRoot":""}