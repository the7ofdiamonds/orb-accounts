{"version":3,"file":"src_views_ClientSelections_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/ClientSelections.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchServices } from '../controllers/accountsServicesSlice.js';\nimport { getClient } from '../controllers/accountsClientSlice.js';\nimport {\n  addSelections,\n  calculateSelections,\n  addOnboardingLink,\n  createQuote,\n  finalizeQuote,\n  getClientQuotes,\n  getQuote,\n  getQuoteByID\n} from '../controllers/accountsQuoteSlice.js';\nimport { updateStripeQuote } from '../controllers/accountsStripeSlice.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction SelectionsComponent() {\n  const dispatch = useDispatch();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Check the boxes next to the services you would like performed.'\n  );\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const { servicesLoading, servicesError, services } = useSelector(\n    (state) => state.accountsServices\n  );\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const {\n    quoteLoading,\n    quoteError,\n    stripe_quote_id,\n    quotes,\n    quote_id,\n    quote_status,\n    selections,\n    total,\n  } = useSelector((state) => state.accountsQuote);\nconsole.log(services);\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(quotes) && quotes.length > 0) {\n      const filteredQuotes = [];\n\n      quotes.forEach((quote) => {\n        const timestampNow = Math.floor(Date.now() / 1000);\n        const timestamp = parseInt(quote.expires_at);\n        const createdAt = new Date(quote.created_at).getTime();\n        const status = quote.status;\n\n        if (timestampNow < timestamp) {\n          if (\n            status === 'draft' ||\n            status === 'open' ||\n            status === 'accepted'\n          ) {\n            filteredQuotes.push(createdAt);\n          }\n        }\n      });\n\n      if (filteredQuotes.length > 0) {\n        const earliestDate = Math.min(...filteredQuotes);\n\n        quotes.forEach((quote) => {\n          if (new Date(quote.created_at).getTime() === earliestDate) {\n            dispatch(getQuote(quote.stripe_quote_id));\n          }\n        });\n      }\n    }\n  }, [quotes, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(fetchServices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  useEffect(() => {\n    dispatch(addSelections(checkedItems));\n  }, [dispatch, checkedItems]);\n\n  useEffect(() => {\n    dispatch(calculateSelections(services.price));\n  }, [dispatch, services.price, checkedItems]);\n\n  useEffect(() => {\n    dispatch(addOnboardingLink());\n  }, [dispatch, checkedItems]);\n\n  useEffect(() => {\n    if (stripe_quote_id) {\n      dispatch(getQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [stripe_quote_id, dispatch]);\n\n  useEffect(() => {\n    if (quote_id) {\n      dispatch(getQuoteByID()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [quote_id, dispatch]);\n\n  const handleCheckboxChange = (\n    event,\n    id,\n    price_id,\n    description,\n    price,\n    onboarding_link\n  ) => {\n    const isChecked = event.target.checked;\n\n    setCheckedItems((prevItems) => {\n      if (isChecked) {\n        const newItem = { id, price_id, description, price, onboarding_link };\n        return [...prevItems, newItem];\n      } else {\n        return prevItems.filter((item) => item.id !== id);\n      }\n    });\n  };\n\n  const handleClick = () => {\n    if (selections.length === 0) {\n      setMessageType('error');\n    } else if (\n      (stripe_quote_id &&\n        quote_status === 'canceled' &&\n        selections.length > 0) ||\n      (stripe_quote_id === '' &&\n        quote_status === '' &&\n        selections.length > 0 &&\n        stripe_customer_id)\n    ) {\n      dispatch(createQuote(selections)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } \n      });\n    } else if (\n      stripe_quote_id &&\n      quote_status === 'draft' &&\n      selections.length > 0\n    ) {\n      dispatch(updateStripeQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (stripe_quote_id && quote_status === 'draft') {\n      dispatch(finalizeQuote()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    } else if (\n      quote_id &&\n      (quote_status === 'open' || quote_status === 'accepted')\n    ) {\n      window.location.href = `/billing/quote/${quote_id}`;\n    }\n  };\n\n  if (servicesLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (servicesError) {\n    return <ErrorComponent error={servicesError} />;\n  }\n\n  return (\n    <>\n      <section className=\"selections\">\n        <h2 className=\"title\">selections</h2>\n\n        <div className=\"quote-card card\">\n          <table>\n            <thead>\n              <tr>\n                <th colSpan={2}>\n                  <h4 className=\"title\">service</h4>\n                </th>\n                <th>\n                  <h4 className=\"title\">cost</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {services && services.length ? (\n                <React.Fragment>\n                  {services.map((service) => {\n                    const {\n                      id,\n                      price_id,\n                      description,\n                      price,\n                      onboarding_link,\n                    } = service;\n\n                    return (\n                      <tr key={id} id=\"quote_option\">\n                        <td>\n                          <input\n                            className=\"input selection feature-selection\"\n                            type=\"checkbox\"\n                            name=\"quote[checkbox][]\"\n                            checked={checkedItems.some(\n                              (item) => item.id === id\n                            )}\n                            onChange={(event) =>\n                              handleCheckboxChange(\n                                event,\n                                id,\n                                price_id,\n                                description,\n                                price,\n                                onboarding_link\n                              )\n                            }\n                          />\n                        </td>\n                        <td className=\"feature-description\">\n                          <h5>{description}</h5>\n                        </td>\n                        <td\n                          className=\"feature-cost table-number\"\n                          id=\"feature_cost\">\n                          <h4>\n                            {new Intl.NumberFormat('us', {\n                              style: 'currency',\n                              currency: 'USD',\n                            }).format(price)}\n                          </h4>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </React.Fragment>\n              ) : (\n                <tr>\n                  <td colSpan={3}>\n                    <h3>No services to show yet</h3>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n            <tfoot>\n              <tr>\n                <th colSpan={2}>\n                  <h4 className=\"title\">TOTAL</h4>\n                </th>\n                <th>\n                  <h4 className=\"subtotal\">\n                    {new Intl.NumberFormat('us', {\n                      style: 'currency',\n                      currency: 'USD',\n                    }).format(total)}\n                  </h4>\n                </th>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        {Array.isArray(selections) && selections.length > 0 ? (\n          <button onClick={handleClick}>\n            <h3>QUOTE</h3>\n          </button>\n        ) : (\n          ''\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default SelectionsComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","React","useEffect","useState","useSelector","useDispatch","fetchServices","getClient","addSelections","calculateSelections","addOnboardingLink","createQuote","finalizeQuote","getClientQuotes","getQuote","getQuoteByID","updateStripeQuote","StatusBar","SelectionsComponent","dispatch","messageType","setMessageType","message","setMessage","checkedItems","setCheckedItems","servicesLoading","servicesError","services","state","accountsServices","user_email","stripe_customer_id","accountsClient","quoteLoading","quoteError","stripe_quote_id","quotes","quote_id","quote_status","selections","total","accountsQuote","console","log","then","response","undefined","Array","isArray","length","filteredQuotes","forEach","quote","timestampNow","Math","floor","Date","now","timestamp","parseInt","expires_at","createdAt","created_at","getTime","status","push","earliestDate","min","price","handleCheckboxChange","event","id","price_id","description","onboarding_link","isChecked","target","checked","prevItems","newItem","filter","item","handleClick","window","location","href","Fragment","colSpan","map","service","key","type","name","some","onChange","Intl","NumberFormat","style","currency","format","onClick","StatusBarComponent"],"sourceRoot":""}