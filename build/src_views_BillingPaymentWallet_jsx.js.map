{"version":3,"file":"src_views_BillingPaymentWallet_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingPaymentWallet.jsx","webpack://orb-accounts/./src/views/components/PaymentNavigation.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  PaymentRequestButtonElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nimport PaymentNavigationComponent from './components/PaymentNavigation';\nimport StatusBar from './components/StatusBar.jsx';\n\nconst WalletComponent = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState(\n    'Please enter your card number, expiration date, and the code on the back.'\n  );\n  const { setPaymentRequest, paymentRequest } = useState();\n\n  const { paymentLoading, paymentError, client_secret } = useSelector(\n    (state) => state.accountsPayment\n  );\n  const { receipt_id, payment_method } = useSelector((state) => state.accountsReceipt);\n\n  useEffect(() => {\n    if (!stripe || !elements) {\n      return;\n    }\n    const paymentRequest = stripe.paymentRequest({\n      country: 'US',\n      currency: 'usd',\n      requestPayerEmail: true,\n      requestPayerName: true,\n      total: {\n        label: 'Total',\n        amount: 1000, // Amount in cents\n      },\n    });\n\n    paymentRequest.canMakePayment().then((result) => {\n      if (result) {\n        setPaymentRequest(paymentRequest);\n      }\n    });\n  }, [stripe, elements, setPaymentRequest]);\n\n  if (paymentLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (paymentError) {\n    return <ErrorComponent error={servicesError} />;\n  }\n\n  return (\n    <>\n      <section className=\"payment\">\n        <PaymentNavigationComponent />\n        {paymentRequest && (\n          <PaymentRequestButtonElement options={{ paymentRequest }} />\n        )}\n\n        <StatusBar message={message} messageType={messageType} />\n      </section>\n    </>\n  );\n};\n\nexport default WalletComponent;\n","import { NavLink } from 'react-router-dom';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nfunction PaymentNavigationComponent() {\n  const { id } = useParams();\n\n  return (\n    <>      \n      <div className=\"payment-options\">\n        <NavLink to={`/billing/payment/wallet/${id}`}>\n          <button className=\"mobile-btn\" id=\"mobile-btn\">\n            <h3>WALLET</h3>\n          </button>\n        </NavLink>\n\n        <NavLink to={`/billing/payment/card/${id}`}>\n          <button className=\"debit-credit-btn\" id=\"debit-credit-btn\">\n            <h3>CARD</h3>\n          </button>\n        </NavLink>\n      </div>\n    </>\n  );\n}\n\nexport default PaymentNavigationComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>\n            <h4>{message}</h4>\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","useState","useEffect","useSelector","useDispatch","PaymentRequestButtonElement","useStripe","useElements","PaymentNavigationComponent","StatusBar","WalletComponent","stripe","elements","messageType","setMessageType","message","setMessage","setPaymentRequest","paymentRequest","paymentLoading","paymentError","client_secret","state","accountsPayment","receipt_id","payment_method","accountsReceipt","country","currency","requestPayerEmail","requestPayerName","total","label","amount","canMakePayment","then","result","servicesError","Fragment","options","NavLink","useNavigate","useParams","id","to","StatusBarComponent"],"sourceRoot":""}