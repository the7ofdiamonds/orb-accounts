{"version":3,"file":"src_views_BillingInvoices_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/BillingInvoices.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice';\nimport {\n  getClientInvoices,\n  deleteInvoice,\n} from '../controllers/accountsInvoiceSlice';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nfunction BillingInvoices() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const { invoiceLoading, invoiceError, invoices } = useSelector(\n    (state) => state.accountsInvoice\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientInvoices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (invoiceLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (invoiceError) {\n    return <ErrorComponent error={invoiceError} />;\n  }\n\n  const now = new Date().getTime();\n  let sortedInvoices = [];\n\n  if (Array.isArray(invoices)) {\n    sortedInvoices = invoices.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.due_date - now);\n      const timeDiffB = Math.abs(b.due_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      <section className=\"invoices\">\n        <h2 className=\"title\">Invoices</h2>\n        {Array.isArray(sortedInvoices) && sortedInvoices.length > 0 ? (\n          <div className=\"card invoice\">\n            <table>\n              <thead>\n                <tr>\n                  <th>\n                    <h4>Invoice ID</h4>\n                  </th>\n                  <th>\n                    <h4>Status</h4>\n                  </th>\n                  <th>\n                    <h4>Balance</h4>\n                  </th>\n                  <th>\n                    <h4>Due Date</h4>\n                  </th>\n                  <th>\n                    <h4>Quote ID</h4>\n                  </th>\n                  <th>\n                    <h4>Page</h4>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedInvoices.map((invoice) => (\n                  <>\n                    <tr>\n                      <td>{invoice.id}</td>\n                      <td>{invoice.status}</td>\n                      <td>\n                        {/* add currency column using var invoice.currency */}\n                        {new Intl.NumberFormat('us', {\n                          style: 'currency',\n                          currency: 'USD',\n                        }).format(invoice.amount_remaining)}\n                      </td>\n                      <td>\n                        {invoice.due_date\n                          ? new Date(invoice.due_date * 1000).toLocaleString()\n                          : ''}\n                      </td>\n                      <td>{invoice.quote_id}</td>\n                      <td>\n                        {invoice.status === 'deleted' ? (\n                          <h5>Deleted</h5>\n                        ) : invoice.status === 'paid' ? (\n                          <a href={`/services/invoice/${invoice.id}`}>\n                            <button>\n                              <h5>View</h5>\n                            </button>\n                          </a>\n                        ) : invoice.status === 'void' ? (\n                          <h5>Void</h5>\n                        ) : invoice.status === 'uncollectible' ? (\n                          <h5>Uncollectible</h5>\n                        ) : invoice.status === 'open' ? (\n                          <a href={`/services/invoice/${invoice.id}`}>\n                            <h5>Continue</h5>\n                          </a>\n                        ) : (\n                          <a>\n                            <button\n                              onClick={async () =>\n                                await dispatch(\n                                  deleteInvoice(invoice.stripe_invoice_id)\n                                ).then(() => {\n                                  dispatch(getClientInvoices());\n                                })\n                              }>\n                              <h5>Delete</h5>\n                            </button>\n                          </a>\n                        )}\n                      </td>\n                    </tr>\n                  </>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default BillingInvoices;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","React","useEffect","useDispatch","useSelector","getClient","getClientInvoices","deleteInvoice","BillingInvoices","dispatch","user_email","stripe_customer_id","state","accountsClient","invoiceLoading","invoiceError","invoices","accountsInvoice","now","Date","getTime","sortedInvoices","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","due_date","timeDiffB","Fragment","length","map","invoice","id","status","Intl","NumberFormat","style","currency","format","amount_remaining","toLocaleString","quote_id","href","onClick","stripe_invoice_id","then"],"sourceRoot":""}