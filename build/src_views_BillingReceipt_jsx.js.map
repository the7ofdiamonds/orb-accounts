{"version":3,"file":"src_views_BillingReceipt_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/utils/PhoneNumberFormatter.js","webpack://orb-accounts/./src/views/BillingReceipt.jsx","webpack://orb-accounts/./src/views/components/StatusBar.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","const formatPhoneNumber = (phoneNumber) => {\n  if (typeof phoneNumber !== 'string' || phoneNumber.trim() === '') {\n    return ''; // Return an empty string for invalid phone numbers\n  }\n\n  // Remove all non-digit characters from the phone number\n  const cleaned = phoneNumber.replace(/\\D/g, '');\n\n  // Apply the desired phone number format\n  const regex = /^(\\d{1})(\\d{3})(\\d{3})(\\d{4})$/;\n  const formatted = cleaned.replace(regex, '+$1 ($2) $3-$4');\n\n  return formatted;\n};\n\nexport default formatPhoneNumber;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice.js';\nimport { getQuoteByID } from '../controllers/accountsQuoteSlice.js';\nimport { getInvoice } from '../controllers/accountsInvoiceSlice.js';\nimport { getReceiptByID } from '../controllers/accountsReceiptSlice.js';\nimport {\n  getStripeInvoice,\n  getPaymentIntent,\n  getPaymentMethod,\n} from '../controllers/accountsStripeSlice.js';\n\nimport formatPhoneNumber from '../utils/PhoneNumberFormatter.js';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\nimport StatusBar from './components/StatusBar.jsx';\n\nfunction ReceiptComponent() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState('');\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const {\n    company_name,\n    address_line_1,\n    address_line_2,\n    city,\n    state,\n    zipcode,\n    phone,\n  } = useSelector((state) => state.accountsCustomer);\n  const { selections } = useSelector((state) => state.accountsQuote);\n  const {\n    subtotal,\n    tax,\n    amount_due,\n    amount_paid,\n    amount_remaining,\n    payment_date,\n    payment_intent_id,\n    quote_id,\n  } = useSelector((state) => state.accountsInvoice);\n  const {\n    receiptLoading,\n    receiptError,\n    stripe_invoice_id,\n    payment_method,\n    first_name,\n    last_name,\n  } = useSelector((state) => state.accountsReceipt);\n\n  const timestamp = payment_date * 1000;\n  const paymentDate = new Date(timestamp);\n  const formattedPhone = formatPhoneNumber(phone);\n  const Subtotal = subtotal / 100;\n  const Tax = tax / 100;\n  const amountDue = amount_due / 100;\n  const amountPaid = amount_paid / 100;\n  const Balance = amount_remaining / 100;\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient()).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [dispatch, user_email]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getReceiptByID(id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          dispatch(getPaymentMethod(response.payload.payment_method_id)).then(\n            (response) => {\n              if (response.error !== undefined) {\n                console.error(response.error.message);\n                setMessageType('error');\n                setMessage(response.error.message);\n              }\n            }\n          );\n        }\n      });\n    }\n  }, [dispatch, id, stripe_customer_id]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getStripeInvoice(stripe_invoice_id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        } else {\n          console.log(response);\n        }\n      });\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (stripe_invoice_id) {\n      dispatch(getInvoice(stripe_invoice_id));\n    }\n  }, [dispatch, stripe_invoice_id]);\n\n  useEffect(() => {\n    if (quote_id) {\n      dispatch(getQuoteByID(quote_id));\n    }\n  }, [dispatch, quote_id]);\n\n  useEffect(() => {\n    if (payment_intent_id) {\n      dispatch(getPaymentIntent(payment_intent_id)).then((response) => {\n        if (response.error !== undefined) {\n          console.error(response.error.message);\n          setMessageType('error');\n          setMessage(response.error.message);\n        }\n      });\n    }\n  }, [dispatch, payment_intent_id]);\n\n  const handleClickDashboard = () => {\n    window.location = '/dashboard';\n  };\n\n  const handleClickBilling = () => {\n    window.location = '/billing';\n  };\n\n  if (receiptLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (receiptError) {\n    return <ErrorComponent error={receiptError} />;\n  }\n\n  return (\n    <>\n      <section className=\"receipt\">\n        <h2 className=\"title\">RECEIPT</h2>\n\n        <div className=\"receipt-card card\">\n          <div className=\"thead\">\n            <div className=\"tr receipt-number\">\n              <div className=\"th\">\n                <h4>RECEIPT NUMBER</h4>\n              </div>\n              <div className=\"td\">\n                <h5>{id}</h5>\n              </div>\n            </div>\n            <div className=\"tr payment-date\">\n              <div className=\"th\">\n                <h4>PAYMENT DATE</h4>\n              </div>\n              <div className=\"td\">\n                <h5>{paymentDate.toLocaleString()}</h5>\n              </div>\n            </div>\n            <div className=\"tr payment-method\">\n              <div className=\"th\">\n                <h4>PAYMENT TYPE</h4>\n              </div>\n              <div className=\"td\">\n                <h5>{payment_method}</h5>\n              </div>\n            </div>\n            <div className=\"tr client-details\">\n              <div className=\"th\">\n                <h4>PAID BY</h4>\n              </div>\n              <div className=\"td\">\n                <h5>\n                  {first_name} {last_name} O/B/O {company_name}\n                </h5>\n              </div>\n              <div className=\"tr address-line-1\">\n                <div className=\"td\">\n                  <h5>{address_line_1}</h5>\n                </div>\n                <div className=\"td\">\n                  <h5>{address_line_2}</h5>\n                </div>\n              </div>\n              <div className=\"tr address-line-2\">\n                <div className=\"td\">\n                  <h5>{`${city},`}</h5>\n                </div>\n                <div className=\"td\">\n                  <h5>{state}</h5>\n                </div>\n                <div className=\"td\">\n                  <h5>{zipcode}</h5>\n                </div>\n              </div>\n              <div className=\"tr phone\">\n                <div className=\"td\">\n                  <a href={`tel:${phone}`}>\n                    <h5>{formattedPhone}</h5>\n                  </a>\n                </div>\n              </div>\n              <div className=\"tr email\">\n                <div className=\"td\">\n                  <h5>{user_email}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <table>\n            <thead>\n              <th>\n                <h4>NO.</h4>\n              </th>\n              <th>\n                <h4>DESCRIPTION</h4>\n              </th>\n              <th>\n                <h4>TOTAL</h4>\n              </th>\n            </thead>\n            <tbody>\n              {selections &&\n                selections.length > 0 &&\n                selections.map((selection) => (\n                  <tr>\n                    <td>\n                      <h5>{selection.id}</h5>\n                    </td>\n                    <td>\n                      <h5>{selection.description}</h5>\n                    </td>\n                    <td className=\"selections-cost\">\n                      <h5>\n                        {new Intl.NumberFormat('us', {\n                          style: 'currency',\n                          currency: 'USD',\n                        }).format(selection.cost)}\n                      </h5>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n\n          <div className=\"tfoot\">\n            <div className=\"tr subtotal\">\n              <div className=\"th subtotal-label\">\n                <h4>SUBTOTAL</h4>\n              </div>\n              <div className=\"td subtotal-number\">\n                <h5>\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(Subtotal)}\n                </h5>\n              </div>\n            </div>\n            <div className=\"tr tax\">\n              <div className=\"th tax-label\">\n                <h4>TAX</h4>\n              </div>\n              <div className=\"td tax-number\">\n                <h5>\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(Tax)}\n                </h5>\n              </div>\n            </div>\n            <div className=\"tr grand-total\">\n              <div className=\"th grand-total-label\">\n                <h4>GRAND TOTAL</h4>\n              </div>\n              <div className=\"td grand-total-number\">\n                <h5>\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(amountDue)}\n                </h5>\n              </div>\n            </div>\n            <div className=\"tr amount-paid\">\n              <div className=\"th amount-paid-label\">\n                <h4>AMOUNT PAID</h4>\n              </div>\n              <div className=\"td amount-paid-number\">\n                <h5>\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(amountPaid)}\n                </h5>\n              </div>\n            </div>\n            <div className=\"tr balance\">\n              <div className=\"th balance-label\">\n                <h4>BALANCE</h4>\n              </div>\n              <div className=\"td balance-number\">\n                <h5>\n                  {new Intl.NumberFormat('us', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(Balance)}\n                </h5>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <StatusBar message={message} messageType={messageType} />\n\n        <div className=\"actions\">\n          <button onClick={handleClickDashboard}>\n            <h3>DASHBOARD</h3>\n          </button>\n          <button onClick={handleClickBilling}>\n            <h3>BILLING</h3>\n          </button>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default ReceiptComponent;\n","function StatusBarComponent(props) {\n  const { message, messageType } = props;\n\n  return (\n    <>\n      {message && (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","formatPhoneNumber","phoneNumber","trim","cleaned","replace","regex","formatted","useState","useEffect","useParams","useSelector","useDispatch","getClient","getQuoteByID","getInvoice","getReceiptByID","getStripeInvoice","getPaymentIntent","getPaymentMethod","StatusBar","ReceiptComponent","id","dispatch","messageType","setMessageType","message","setMessage","user_email","stripe_customer_id","state","accountsClient","company_name","address_line_1","address_line_2","city","zipcode","phone","accountsCustomer","selections","accountsQuote","subtotal","tax","amount_due","amount_paid","amount_remaining","payment_date","payment_intent_id","quote_id","accountsInvoice","receiptLoading","receiptError","stripe_invoice_id","payment_method","first_name","last_name","accountsReceipt","timestamp","paymentDate","Date","formattedPhone","Subtotal","Tax","amountDue","amountPaid","Balance","then","response","undefined","console","payload","payment_method_id","log","handleClickDashboard","window","location","handleClickBilling","Fragment","toLocaleString","href","length","map","selection","description","Intl","NumberFormat","style","currency","format","cost","onClick","StatusBarComponent"],"sourceRoot":""}