{"version":3,"file":"src_views_Billing_jsx.js","mappings":"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","sources":["webpack://orb-accounts/./src/error/ErrorComponent.jsx","webpack://orb-accounts/./src/loading/LoadingComponent.jsx","webpack://orb-accounts/./src/views/Billing.jsx","webpack://orb-accounts/./src/views/BillingInvoices.jsx","webpack://orb-accounts/./src/views/BillingQuotes.jsx","webpack://orb-accounts/./src/views/BillingReceipts.jsx"],"sourcesContent":["function ErrorComponent(props) {\n  const { error } = props;\n\n  return (\n    <main className=\"error\">\n      <div className=\"status-bar card error\">\n        <span>{error}</span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorComponent;\n","function LoadingComponent() {\n  return (\n    <div className=\"loading\">\n      <h1>Loading......</h1>\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import React from 'react';\n\nimport BillingReceipt from './BillingReceipts';\nimport BillingInvoice from './BillingInvoices';\nimport BillingQuote from './BillingQuotes';\n\nfunction Billing() {\n  return (\n    <>\n      <section className=\"billing\">\n        <h2 className=\"title\">billing</h2>\n\n        <BillingReceipt />\n        <BillingInvoice />\n        <BillingQuote />\n      </section>\n    </>\n  );\n}\n\nexport default Billing;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice';\nimport {\n  getClientInvoices,\n  deleteInvoice,\n} from '../controllers/accountsInvoiceSlice';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nfunction BillingInvoices() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const { invoiceLoading, invoiceError, invoices } = useSelector(\n    (state) => state.accountsInvoice\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientInvoices());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (invoiceLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (invoiceError) {\n    return <ErrorComponent error={invoiceError} />;\n  }\n\n  const now = new Date().getTime();\n  let sortedInvoices = [];\n\n  if (Array.isArray(invoices)) {\n    sortedInvoices = invoices.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.due_date - now);\n      const timeDiffB = Math.abs(b.due_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedInvoices) && sortedInvoices.length > 0 ? (\n        <div className=\"card invoice\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Due Date</h4>\n                </th>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedInvoices.map((invoice) => (\n                <>\n                  <tr>\n                    <td>{invoice.id}</td>\n                    <td>{invoice.status}</td>\n                    <td>\n                      {/* add currency column using var invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(invoice.amount_remaining)}\n                    </td>\n                    <td>\n                      {invoice.due_date\n                        ? new Date(invoice.due_date * 1000).toLocaleString()\n                        : ''}\n                    </td>\n                    <td>{invoice.quote_id}</td>\n                    <td>\n                      {invoice.status === 'deleted' ? (\n                        <h5>Deleted</h5>\n                      ) : invoice.status === 'paid' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <button>\n                            <h5>View</h5>\n                          </button>\n                        </a>\n                      ) : invoice.status === 'void' ? (\n                        <h5>Void</h5>\n                      ) : invoice.status === 'uncollectible' ? (\n                        <h5>Uncollectible</h5>\n                      ) : invoice.status === 'open' ? (\n                        <a href={`/services/invoice/${invoice.id}`}>\n                          <h5>Continue</h5>\n                        </a>\n                      ) : (\n                        <a>\n                          <button\n                            onClick={async () =>\n                              await dispatch(\n                                deleteInvoice(invoice.stripe_invoice_id)\n                              ).then(() => {\n                                dispatch(getClientInvoices());\n                              })\n                            }>\n                            <h5>Delete</h5>\n                          </button>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingInvoices;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice';\nimport { getClientQuotes } from '../controllers/accountsQuoteSlice';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nfunction BillingQuotes() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const { quoteLoading, quoteError, quotes, pdf } = useSelector(\n    (state) => state.accountsQuote\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientQuotes());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (quoteLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (quoteError) {\n    return <ErrorComponent error={quoteError} />;\n  }\n\n  const now = new Date().getTime();\n  let sortedQuotes = [];\n\n  if (Array.isArray(quotes)) {\n    sortedQuotes = quotes.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.expires_at - now);\n      const timeDiffB = Math.abs(b.expires_at - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedQuotes) && sortedQuotes.length > 0 ? (\n        <div className=\"card quote\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Quote ID</h4>\n                </th>\n                <th>\n                  <h4>Status</h4>\n                </th>\n                <th>\n                  <h4>Total</h4>\n                </th>\n                <th>\n                  <h4>Page</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedQuotes.map((quote) => (\n                <>\n                  <tr>\n                    <td>{quote.id}</td>\n                    <td>{quote.status}</td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(quote.amount_total)}\n                    </td>\n                    <td>\n                      {quote.status === 'accepted' ? (\n                        <h5>Accepted</h5>\n                      ) : quote.status === 'canceled' ? (\n                        <h5>Canceled</h5>\n                      ) : (\n                        <a href={`/services/quote/${quote.id}`}>\n                          <h5>Confirm</h5>\n                        </a>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingQuotes;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getClient } from '../controllers/accountsClientSlice';\nimport { getClientReceipts } from '../controllers/accountsReceiptSlice';\n\nimport LoadingComponent from '../loading/LoadingComponent.jsx';\nimport ErrorComponent from '../error/ErrorComponent.jsx';\n\nfunction BillingReceipts() {\n  const dispatch = useDispatch();\n\n  const { user_email, stripe_customer_id } = useSelector(\n    (state) => state.accountsClient\n  );\n  const { receiptLoading, receiptError, receipts } = useSelector(\n    (state) => state.accountsReceipt\n  );\n\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getClient());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (stripe_customer_id) {\n      dispatch(getClientReceipts());\n    }\n  }, [stripe_customer_id, dispatch]);\n\n  if (receiptLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (receiptError) {\n    return <ErrorComponent error={receiptError} />;\n  }\n\n  const now = new Date().getTime();\n  let sortedReceipts = [];\n\n  if (Array.isArray(receipts)) {\n    sortedReceipts = receipts.slice().sort((a, b) => {\n      const timeDiffA = Math.abs(a.payment_date - now);\n      const timeDiffB = Math.abs(b.payment_date - now);\n\n      return timeDiffA - timeDiffB;\n    });\n  }\n\n  return (\n    <>\n      {Array.isArray(sortedReceipts) && sortedReceipts.length > 0 ? (\n        <div className=\"card receipt\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h4>Receipt ID</h4>\n                </th>\n                <th>\n                  <h4>Amount Paid</h4>\n                </th>\n                <th>\n                  <h4>Balance</h4>\n                </th>\n                <th>\n                  <h4>Invoice ID</h4>\n                </th>\n                <th>\n                  <h4>PDF</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedReceipts.map((receipt) => (\n                <>\n                  <tr key={receipt.id}>\n                    <td>{receipt.id}</td>\n                    <td>\n                      {/* add locales column & currency column Ex: invoice.currency */}\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.amount_paid)}\n                    </td>\n                    <td>\n                      {new Intl.NumberFormat('us', {\n                        style: 'currency',\n                        currency: 'USD',\n                      }).format(receipt.balance)}\n                    </td>\n                    <td>{receipt.invoice_id}</td>\n                    <td>\n                      <a href={receipt.receipt_pdf_url} target=\"_blank\">\n                        <button>\n                          <h5>Download</h5>\n                        </button>\n                      </a>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default BillingReceipts;\n"],"names":["ErrorComponent","props","error","createElement","className","LoadingComponent","React","BillingReceipt","BillingInvoice","BillingQuote","Billing","Fragment","useEffect","useDispatch","useSelector","getClient","getClientInvoices","deleteInvoice","BillingInvoices","dispatch","user_email","stripe_customer_id","state","accountsClient","invoiceLoading","invoiceError","invoices","accountsInvoice","now","Date","getTime","sortedInvoices","Array","isArray","slice","sort","a","b","timeDiffA","Math","abs","due_date","timeDiffB","length","map","invoice","id","status","Intl","NumberFormat","style","currency","format","amount_remaining","toLocaleString","quote_id","href","onClick","stripe_invoice_id","then","useState","getClientQuotes","BillingQuotes","quoteLoading","quoteError","quotes","pdf","accountsQuote","sortedQuotes","expires_at","quote","amount_total","getClientReceipts","BillingReceipts","receiptLoading","receiptError","receipts","accountsReceipt","sortedReceipts","payment_date","receipt","key","amount_paid","balance","invoice_id","receipt_pdf_url","target"],"sourceRoot":""}